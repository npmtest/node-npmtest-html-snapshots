{"/home/travis/build/npmtest/node-npmtest-html-snapshots/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-html-snapshots/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_html_snapshots */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-html-snapshots/lib.npmtest_html_snapshots.js":{"path":"/home/travis/build/npmtest/node-npmtest-html-snapshots/lib.npmtest_html_snapshots.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":59}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":65}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_html_snapshots */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_html_snapshots = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_html_snapshots = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-html-snapshots/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-html-snapshots/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":58}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":72},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-html-snapshots && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_html_snapshots */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_html_snapshots","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_html_snapshots.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_html_snapshots.rollup.js'] =","            local.assetsDict['/assets.npmtest_html_snapshots.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_html_snapshots.__dirname + '/lib.npmtest_html_snapshots.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/html-snapshots.js":{"path":"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/html-snapshots.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0},"b":{"1":[0,1],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"(anonymous_1)","line":47,"loc":{"start":{"line":47,"column":30},"end":{"line":47,"column":42}}},"2":{"name":"worker","line":97,"loc":{"start":{"line":97,"column":0},"end":{"line":97,"column":48}}},"3":{"name":"(anonymous_3)","line":127,"loc":{"start":{"line":127,"column":19},"end":{"line":127,"column":32}}},"4":{"name":"(anonymous_4)","line":134,"loc":{"start":{"line":134,"column":18},"end":{"line":134,"column":34}}},"5":{"name":"prepOptions","line":153,"loc":{"start":{"line":153,"column":0},"end":{"line":153,"column":31}}},"6":{"name":"(anonymous_6)","line":177,"loc":{"start":{"line":177,"column":7},"end":{"line":177,"column":36}}},"7":{"name":"(anonymous_7)","line":195,"loc":{"start":{"line":195,"column":6},"end":{"line":195,"column":32}}},"8":{"name":"(anonymous_8)","line":201,"loc":{"start":{"line":201,"column":31},"end":{"line":201,"column":58}}},"9":{"name":"completionResolver","line":202,"loc":{"start":{"line":202,"column":8},"end":{"line":202,"column":53}}},"10":{"name":"(anonymous_10)","line":220,"loc":{"start":{"line":220,"column":25},"end":{"line":220,"column":51}}},"11":{"name":"(anonymous_11)","line":229,"loc":{"start":{"line":229,"column":23},"end":{"line":229,"column":38}}},"12":{"name":"(anonymous_12)","line":234,"loc":{"start":{"line":234,"column":43},"end":{"line":234,"column":60}}},"13":{"name":"(anonymous_13)","line":239,"loc":{"start":{"line":239,"column":14},"end":{"line":239,"column":26}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":43}},"2":{"start":{"line":16,"column":0},"end":{"line":16,"column":27}},"3":{"start":{"line":17,"column":0},"end":{"line":17,"column":50}},"4":{"start":{"line":18,"column":0},"end":{"line":18,"column":36}},"5":{"start":{"line":19,"column":0},"end":{"line":19,"column":32}},"6":{"start":{"line":20,"column":0},"end":{"line":20,"column":26}},"7":{"start":{"line":22,"column":0},"end":{"line":22,"column":33}},"8":{"start":{"line":23,"column":0},"end":{"line":23,"column":49}},"9":{"start":{"line":24,"column":0},"end":{"line":24,"column":43}},"10":{"start":{"line":25,"column":0},"end":{"line":25,"column":29}},"11":{"start":{"line":26,"column":0},"end":{"line":26,"column":57}},"12":{"start":{"line":47,"column":0},"end":{"line":59,"column":2}},"13":{"start":{"line":52,"column":2},"end":{"line":52,"column":57}},"14":{"start":{"line":54,"column":2},"end":{"line":56,"column":3}},"15":{"start":{"line":55,"column":4},"end":{"line":55,"column":124}},"16":{"start":{"line":58,"column":2},"end":{"line":58,"column":23}},"17":{"start":{"line":64,"column":0},"end":{"line":71,"column":3}},"18":{"start":{"line":97,"column":0},"end":{"line":145,"column":1}},"19":{"start":{"line":98,"column":2},"end":{"line":101,"column":115}},"20":{"start":{"line":104,"column":2},"end":{"line":144,"column":3}},"21":{"start":{"line":107,"column":4},"end":{"line":110,"column":5}},"22":{"start":{"line":108,"column":6},"end":{"line":108,"column":95}},"23":{"start":{"line":109,"column":6},"end":{"line":109,"column":51}},"24":{"start":{"line":112,"column":4},"end":{"line":125,"column":6}},"25":{"start":{"line":127,"column":4},"end":{"line":132,"column":7}},"26":{"start":{"line":128,"column":6},"end":{"line":128,"column":40}},"27":{"start":{"line":129,"column":6},"end":{"line":129,"column":27}},"28":{"start":{"line":130,"column":6},"end":{"line":130,"column":23}},"29":{"start":{"line":131,"column":6},"end":{"line":131,"column":13}},"30":{"start":{"line":134,"column":4},"end":{"line":136,"column":7}},"31":{"start":{"line":135,"column":6},"end":{"line":135,"column":16}},"32":{"start":{"line":139,"column":4},"end":{"line":139,"column":50}},"33":{"start":{"line":143,"column":4},"end":{"line":143,"column":11}},"34":{"start":{"line":153,"column":0},"end":{"line":161,"column":1}},"35":{"start":{"line":155,"column":2},"end":{"line":155,"column":35}},"36":{"start":{"line":158,"column":2},"end":{"line":160,"column":3}},"37":{"start":{"line":159,"column":4},"end":{"line":159,"column":28}},"38":{"start":{"line":163,"column":0},"end":{"line":248,"column":2}},"39":{"start":{"line":178,"column":4},"end":{"line":178,"column":74}},"40":{"start":{"line":180,"column":4},"end":{"line":180,"column":28}},"41":{"start":{"line":181,"column":4},"end":{"line":181,"column":25}},"42":{"start":{"line":184,"column":4},"end":{"line":184,"column":56}},"43":{"start":{"line":187,"column":4},"end":{"line":189,"column":5}},"44":{"start":{"line":188,"column":6},"end":{"line":188,"column":32}},"45":{"start":{"line":192,"column":4},"end":{"line":192,"column":30}},"46":{"start":{"line":193,"column":4},"end":{"line":193,"column":33}},"47":{"start":{"line":194,"column":4},"end":{"line":197,"column":9}},"48":{"start":{"line":196,"column":8},"end":{"line":196,"column":49}},"49":{"start":{"line":199,"column":4},"end":{"line":244,"column":5}},"50":{"start":{"line":201,"column":6},"end":{"line":217,"column":9}},"51":{"start":{"line":202,"column":8},"end":{"line":215,"column":9}},"52":{"start":{"line":203,"column":10},"end":{"line":207,"column":11}},"53":{"start":{"line":204,"column":12},"end":{"line":204,"column":63}},"54":{"start":{"line":206,"column":12},"end":{"line":206,"column":65}},"55":{"start":{"line":208,"column":10},"end":{"line":214,"column":11}},"56":{"start":{"line":209,"column":12},"end":{"line":209,"column":53}},"57":{"start":{"line":210,"column":12},"end":{"line":210,"column":38}},"58":{"start":{"line":211,"column":12},"end":{"line":211,"column":24}},"59":{"start":{"line":213,"column":12},"end":{"line":213,"column":31}},"60":{"start":{"line":216,"column":8},"end":{"line":216,"column":60}},"61":{"start":{"line":220,"column":6},"end":{"line":222,"column":31}},"62":{"start":{"line":221,"column":8},"end":{"line":221,"column":31}},"63":{"start":{"line":226,"column":6},"end":{"line":226,"column":47}},"64":{"start":{"line":229,"column":6},"end":{"line":231,"column":8}},"65":{"start":{"line":230,"column":8},"end":{"line":230,"column":31}},"66":{"start":{"line":234,"column":6},"end":{"line":241,"column":11}},"67":{"start":{"line":236,"column":8},"end":{"line":236,"column":60}},"68":{"start":{"line":240,"column":10},"end":{"line":240,"column":28}},"69":{"start":{"line":243,"column":6},"end":{"line":243,"column":64}},"70":{"start":{"line":246,"column":4},"end":{"line":246,"column":18}}},"branchMap":{"1":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"2":{"line":101,"type":"cond-expr","locations":[{"start":{"line":101,"column":65},"end":{"line":101,"column":87}},{"start":{"line":101,"column":90},"end":{"line":101,"column":114}}]},"3":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":2},"end":{"line":104,"column":2}},{"start":{"line":104,"column":2},"end":{"line":104,"column":2}}]},"4":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":4},"end":{"line":107,"column":4}},{"start":{"line":107,"column":4},"end":{"line":107,"column":4}}]},"5":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":2},"end":{"line":158,"column":2}},{"start":{"line":158,"column":2},"end":{"line":158,"column":2}}]},"6":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":14},"end":{"line":180,"column":21}},{"start":{"line":180,"column":25},"end":{"line":180,"column":27}}]},"7":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":4},"end":{"line":187,"column":4}},{"start":{"line":187,"column":4},"end":{"line":187,"column":4}}]},"8":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":4},"end":{"line":199,"column":4}},{"start":{"line":199,"column":4},"end":{"line":199,"column":4}}]},"9":{"line":204,"type":"binary-expr","locations":[{"start":{"line":204,"column":12},"end":{"line":204,"column":34}},{"start":{"line":204,"column":38},"end":{"line":204,"column":62}}]},"10":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":10},"end":{"line":208,"column":10}},{"start":{"line":208,"column":10},"end":{"line":208,"column":10}}]}},"code":["/*"," * html-snapshots.js"," *"," * Produce html snapshots using for a website for SEO purposes."," * This is required for javascript SPAs or ajax page output."," * By default, uses a selector to search content to determine if"," *   a page is \"ready\" for its html snapshot."," *"," * Copyright (c) 2013 - 2017 Alex Grant, LocalNerve, contributors"," * Licensed under the MIT license."," */","/* global Promise */","\"use strict\";","","var spawn = require(\"child_process\").spawn;","var path = require(\"path\");","var EventEmitter = require(\"events\").EventEmitter;","var rimraf = require(\"rimraf\").sync;","var asyncLib = require(\"async\");","var _ = require(\"lodash\");","","var common = require(\"./common\");","var inputFactory = require(\"./input-generators\");","var Notifier = require(\"./async\").Notifier;","var phantomDir = \"./phantom\";","var snapshotScript = path.join(phantomDir, \"default.js\");","","/**"," * Determine the default phantomJS module path. This is overridden by the"," * phatomjs option."," *"," * This function, (technique and concerns) originated from karma-phantomjs-launcher:"," *"," * The MIT License"," * Copyright (C) 2011-2013 Google, Inc."," *"," * Permission is hereby granted, free of charge, to any person obtaining a copy of"," * this software and associated documentation files (the \"Software\"), to deal in"," * the Software without restriction, including without limitation the rights to"," * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies"," * of the Software, and to permit persons to whom the Software is furnished to do"," * so, subject to the following conditions:"," *"," * The above copyright notice and this permission notice shall be included in all"," * copies or substantial portions of the Software."," */","var defaultPhantomJSExePath = function () {","  // If the path we're given by phantomjs is to a .cmd, it is pointing to a global copy.","  // Using the cmd as the process to execute causes problems cleaning up the processes","  // so we walk from the cmd to the phantomjs.exe and use that instead.","","  var phantomSource = require(\"phantomjs-prebuilt\").path;","","  if (path.extname(phantomSource).toLowerCase() === \".cmd\") {","    return path.join(path.dirname( phantomSource ), \"//node_modules//phantomjs-prebuilt//lib//phantom//bin//phantomjs.exe\");","  }","","  return phantomSource;","};","","/**"," * This module's defaults"," */","var defaults = Object.freeze({","  input: \"robots\",","  phantomjs: defaultPhantomJSExePath(),","  snapshotScript: path.join(__dirname, snapshotScript),","  outputDirClean: false,","  pollInterval: 500,","  processLimit: 4","});","","/**"," * The worker task that launches phantomjs."," *"," * @param {Object} input - An input object from an input generator."," * @param {Array} input.phantomjsOptions - Actual Phantomjs options."," * @param {String} input.outputFile - The output file that the html is written to."," * @param {String} input.url - The url to get the html from."," * @param {String} input.selector - The selector to wait for."," * @param {String} input.timeout - The phantomjs timeout."," * @param {String} input.checkInterval - The interval to poll for results."," * @param {Boolean} input.useJQuery - True if selector is jquery selector."," * @param {Boolean} input.verbose - True if verbose output is desired."," * @param {Object} options - Input options."," * @param {Object} options.snapshotScript - Snapshot script options."," * @param {String} options.snapshotScript.script - Snapshot script name."," * @param {String} options.snapshotScript.module - Snapshot script module."," * @param {String} options.phantomjs - Full path to the Phantomjs exe."," * @param {Object} notifier - The async Notifier instance for this run."," * @param {Function} notifier.remove - Remove an outputFile from notifier."," * @param {Function} notifier.setError - Set an error on the notifier."," * @param {Function} notifier.add - Add a file, timeout to the notifier."," * @param {Function} notifier.known - Check if a file is or has been processed."," * @param {Function} qcb - async.queue callback function."," */","function worker (input, options, notifier, qcb) {","  var cp,","      customModule,","      snapshotScript = options.snapshotScript,","      phantomjsOptions = Array.isArray(input.phantomjsOptions) ? input.phantomjsOptions : [input.phantomjsOptions];","","  // If the outputFile has NOT already been seen by the notifier, process.","  if (!notifier.known(input.outputFile)) {","","    // map snapshotScript object script to a real path","    if (_.isObject(options.snapshotScript)) {","      snapshotScript = path.join(__dirname, phantomDir, options.snapshotScript.script) + \".js\";","      customModule = options.snapshotScript.module;","    }","","    cp = spawn(","      options.phantomjs,","      phantomjsOptions.concat([","        snapshotScript,","        input.outputFile,","        input.url,","        input.selector,","        input.timeout,","        input.checkInterval,","        input.useJQuery,","        input.verbose,","        customModule","      ]), { cwd: process.cwd(), stdio: \"inherit\", detached: true }","    );","","    cp.on(\"error\", function (e) {","      notifier.remove(input.outputFile);","      notifier.setError(e);","      console.error(e);","      qcb(e);","    });","","    cp.on(\"exit\", function (code) {","      qcb(code);","    });","","    // start counting","    notifier.add(input.outputFile, input.timeout);","  }","  else {","    // The input.outputFile is being or has been processed this run.","    qcb(0);","  }","}","","/**"," * Prepare html snapshots options."," *"," * @param {Object} options - html snapshots options."," * @param {Array|String} options.source - html snapshots data source."," */","function prepOptions (options) {","  // ensure this module's defaults are represented in the options.","  common.ensure(options, defaults);","","  // if array data source, ensure input type is \"array\".","  if (Array.isArray(options.source)) {","    options.input = \"array\";","  }","}","","module.exports = {","  /**","   * Run all the snapshots using the requested inputGenerator","   *","   * @param {Object} options - ALL user supplied html snapshots options.","   * @param {String} options.outputDir - Directory to write the html files to.","   * @param {String} [options.input] - Input source type \"robots\", \"sitemap\", \"array\";","   * Defaults to \"robots\".","   * @param {Boolean} [options.outputDirClean] - True if output dir should be rm -rf;","   * Defaults to false.","   * @param {Number} [options.pollInterval] -","   * @param {Function} [listener] - User supplied optional callback.","   * @returns {Promise} Resolves on completion.","   */","  run: function (options, listener) {","    var inputGenerator, notifier, started, result, q, emitter, completion;","","    options = options || {};","    prepOptions(options);","","    // create the inputGenerator, default to robots","    inputGenerator = inputFactory.create(options.input);","","    // clean the snapshot output directory","    if (options.outputDirClean) {","      rimraf(options.outputDir);","    }","","    // start async completion notification.","    notifier = new Notifier();","    emitter = new EventEmitter();","    started = notifier.start(options.pollInterval, inputGenerator,","      function (err, completed) {","        emitter.emit(\"complete\", err, completed);","      });","","    if (started) {","      // create the completion Promise.","      completion = new Promise(function (resolve, reject) {","        function completionResolver (err, completed) {","          try {","            _.isFunction(listener) && listener(err, completed);","          } catch (e) {","            console.error(\"User supplied listener exception\", e);","          }","          if (err) {","            err.notCompleted = notifier.filesNotDone;","            err.completed = completed;","            reject(err);","          } else {","            resolve(completed);","          }","        }","        emitter.addListener(\"complete\", completionResolver);","      });","","      // create a worker queue with a parallel process limit.","      q = asyncLib.queue(function (task, callback) {","        task(_.once(callback));","      }, options.processLimit);","","      // have the queue call notifier.empty when last item","      //  from the queue is given to a worker.","      q.empty = notifier.qEmpty.bind(notifier);","","      // expose abort callback to input generators via options.","      options._abort = function (err) {","        notifier.abort(q, err);","      };","","      // generate input for the snapshots.","      result = inputGenerator.run(options, function (input) {","        // give the worker the input and place into the queue","        q.push(_.partial(worker, input, options, notifier));","      })","        // after input generation, resolve on browser completion.","        .then(function () {","          return completion;","        });","    } else {","      result = Promise.reject(\"failed to start async notifier\");","    }","","    return result;","  }","};",""],"l":{"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"22":1,"23":1,"24":1,"25":1,"26":1,"47":1,"52":1,"54":1,"55":0,"58":1,"64":1,"97":1,"98":0,"104":0,"107":0,"108":0,"109":0,"112":0,"127":0,"128":0,"129":0,"130":0,"131":0,"134":0,"135":0,"139":0,"143":0,"153":1,"155":0,"158":0,"159":0,"163":1,"178":0,"180":0,"181":0,"184":0,"187":0,"188":0,"192":0,"193":0,"194":0,"196":0,"199":0,"201":0,"202":1,"203":0,"204":0,"206":0,"208":0,"209":0,"210":0,"211":0,"213":0,"216":0,"220":0,"221":0,"226":0,"229":0,"230":0,"234":0,"236":0,"240":0,"243":0,"246":0}},"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/common/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/common/index.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":10},"end":{"line":16,"column":35}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":9},"end":{"line":32,"column":24}}},"3":{"name":"(anonymous_3)","line":49,"loc":{"start":{"line":49,"column":19},"end":{"line":49,"column":57}}},"4":{"name":"(anonymous_4)","line":78,"loc":{"start":{"line":78,"column":17},"end":{"line":78,"column":44}}},"5":{"name":"(anonymous_5)","line":89,"loc":{"start":{"line":89,"column":26},"end":{"line":89,"column":46}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":100,"column":2}},"2":{"start":{"line":17,"column":4},"end":{"line":23,"column":5}},"3":{"start":{"line":18,"column":6},"end":{"line":22,"column":7}},"4":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"5":{"start":{"line":20,"column":10},"end":{"line":20,"column":37}},"6":{"start":{"line":24,"column":4},"end":{"line":24,"column":19}},"7":{"start":{"line":33,"column":4},"end":{"line":33,"column":23}},"8":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"9":{"start":{"line":35,"column":6},"end":{"line":35,"column":40}},"10":{"start":{"line":37,"column":4},"end":{"line":37,"column":18}},"11":{"start":{"line":50,"column":4},"end":{"line":50,"column":49}},"12":{"start":{"line":52,"column":4},"end":{"line":65,"column":5}},"13":{"start":{"line":53,"column":6},"end":{"line":55,"column":7}},"14":{"start":{"line":54,"column":8},"end":{"line":54,"column":77}},"15":{"start":{"line":58,"column":6},"end":{"line":58,"column":72}},"16":{"start":{"line":61,"column":6},"end":{"line":62,"column":77}},"17":{"start":{"line":64,"column":6},"end":{"line":64,"column":21}},"18":{"start":{"line":67,"column":4},"end":{"line":67,"column":18}},"19":{"start":{"line":79,"column":4},"end":{"line":80,"column":65}},"20":{"start":{"line":82,"column":4},"end":{"line":82,"column":72}},"21":{"start":{"line":84,"column":4},"end":{"line":95,"column":5}},"22":{"start":{"line":86,"column":6},"end":{"line":92,"column":11}},"23":{"start":{"line":91,"column":10},"end":{"line":91,"column":66}},"24":{"start":{"line":94,"column":6},"end":{"line":94,"column":89}},"25":{"start":{"line":97,"column":4},"end":{"line":97,"column":18}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":4}},{"start":{"line":17,"column":4},"end":{"line":17,"column":4}}]},"2":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":8}},{"start":{"line":19,"column":8},"end":{"line":19,"column":8}}]},"3":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":12},"end":{"line":19,"column":36}},{"start":{"line":19,"column":40},"end":{"line":19,"column":62}}]},"4":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"5":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"6":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":6},"end":{"line":53,"column":6}},{"start":{"line":53,"column":6},"end":{"line":53,"column":6}}]},"7":{"line":54,"type":"cond-expr","locations":[{"start":{"line":54,"column":31},"end":{"line":54,"column":66}},{"start":{"line":54,"column":69},"end":{"line":54,"column":76}}]},"8":{"line":58,"type":"cond-expr","locations":[{"start":{"line":58,"column":39},"end":{"line":58,"column":44}},{"start":{"line":58,"column":47},"end":{"line":58,"column":71}}]},"9":{"line":62,"type":"cond-expr","locations":[{"start":{"line":62,"column":18},"end":{"line":62,"column":60}},{"start":{"line":62,"column":63},"end":{"line":62,"column":76}}]},"10":{"line":82,"type":"cond-expr","locations":[{"start":{"line":82,"column":46},"end":{"line":82,"column":58}},{"start":{"line":82,"column":61},"end":{"line":82,"column":71}}]},"11":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":84,"column":4}},{"start":{"line":84,"column":4},"end":{"line":84,"column":4}}]},"12":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":8},"end":{"line":87,"column":35}},{"start":{"line":89,"column":8},"end":{"line":92,"column":10}}]},"13":{"line":94,"type":"cond-expr","locations":[{"start":{"line":94,"column":31},"end":{"line":94,"column":33}},{"start":{"line":94,"column":36},"end":{"line":94,"column":88}}]}},"code":["/**"," * common code"," *"," * Copyright (c) 2013 - 2017, Alex Grant, LocalNerve, contributors"," * Licensed under the MIT license."," */","\"use strict\";","","module.exports = {","  /**","   * Ensures that options at least contains propties and values from must","   * if they're not already defined and not null.","   * Differs from underscore by replacing","   *   undefined *or null* falsies, and only one defaults source allowed.","   */","  ensure: function (options, must) {","    if (must) {","      for (var prop in must) {","        if (options[prop] === void 0 || options[prop] === null) {","          options[prop] = must[prop];","        }","      }","    }","    return options;","  },","","  /**","   * simple test for url","   * If you can think of a more approriate test for this use case,","   *   please let me know in the issues...","   */","  isUrl: function (obj) {","    var result = false;","    if (typeof obj === \"string\") {","      return (/^https?:\\/\\//).test(obj);","    }","    return result;","  },","","  /**","   * Prepend a message to an Error message.","   *","   * @param {Object} [error] - An instance of Error. If not, converted to Error.","   * If undefined, then pass through undefined.","   * @param {String} [message] - The message to prepend.","   * @param {Boolean} [quoteInput] - True if the message should be quoted.","   * @returns {Error} The updated Error instance, undefined if no error.","   */","  prependMsgToErr: function (error, message, quoteInput) {","    var result, prepend, empty = \"\", quote = \"'\";","","    if (error) {","      if (message) {","        prepend = quoteInput ? empty.concat(quote, message, quote) : message;","      }","","      // Force Error instance, coerce given error to a string","      error = error instanceof Error ? error : new Error(empty + error);","","      // If message supplied, prepend it","      error.message =","        prepend ? empty.concat(prepend, \": \", error.message) : error.message;","","      result = error;","    }","","    return result;","  },","","  /**","   * Simple response checker for remote files.","   * Expected use in robots.txt or sitemap.xml only.","   *","   * @param {IncomingMessage} res - The IncomingMessage response to check.","   * @param {Array} mediaTypes - array of acceptable content-type media type strings.","   * @returns {String} Error message, empty string (falsy) if OK.","   */","  checkResponse: function (res, mediaTypes) {","    var contentTypeOk,","        result = \"status: '\" + res.statusCode + \"', GET failed.\";","","    mediaTypes = !Array.isArray(mediaTypes) ? [mediaTypes] : mediaTypes;","","    if (res.statusCode === 200) {","      // if content-type exists, and media type found then contentTypeOk","      contentTypeOk =","        res.headers[\"content-type\"] &&","        // empty array and none found return true","        !mediaTypes.every(function(mediaType) {","          // flip -1 to 0 and NOT, so that true == NOT found, found stops loop w/false","          return !~res.headers[\"content-type\"].indexOf(mediaType);","        });","","      result = contentTypeOk ? \"\" : \"content-type not one of '\"+mediaTypes.join(\",\")+\"'\";","    }","","    return result;","  }","","};",""],"l":{"9":1,"17":0,"18":0,"19":0,"20":0,"24":0,"33":0,"34":0,"35":0,"37":0,"50":0,"52":0,"53":0,"54":0,"58":0,"61":0,"64":0,"67":0,"79":0,"82":0,"84":0,"86":0,"91":0,"94":0,"97":0}},"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/input-generators/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/input-generators/index.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":23,"loc":{"start":{"line":23,"column":10},"end":{"line":23,"column":27}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":11},"end":{"line":25,"column":23}}},"3":{"name":"(anonymous_3)","line":56,"loc":{"start":{"line":56,"column":10},"end":{"line":56,"column":31}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":59,"column":2}},"2":{"start":{"line":24,"column":4},"end":{"line":30,"column":13}},"3":{"start":{"line":26,"column":8},"end":{"line":26,"column":18}},"4":{"start":{"line":32,"column":4},"end":{"line":35,"column":5}},"5":{"start":{"line":33,"column":6},"end":{"line":33,"column":56}},"6":{"start":{"line":34,"column":6},"end":{"line":34,"column":71}},"7":{"start":{"line":37,"column":4},"end":{"line":44,"column":5}},"8":{"start":{"line":38,"column":6},"end":{"line":40,"column":7}},"9":{"start":{"line":39,"column":8},"end":{"line":39,"column":40}},"10":{"start":{"line":42,"column":6},"end":{"line":42,"column":69}},"11":{"start":{"line":46,"column":4},"end":{"line":46,"column":18}},"12":{"start":{"line":57,"column":4},"end":{"line":57,"column":39}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"2":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":17},"end":{"line":34,"column":22}},{"start":{"line":34,"column":26},"end":{"line":34,"column":49}},{"start":{"line":34,"column":53},"end":{"line":34,"column":70}}]},"3":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":6},"end":{"line":38,"column":6}},{"start":{"line":38,"column":6},"end":{"line":38,"column":6}}]}},"code":["/**"," * index.js"," *"," * Input generator factory"," * Create an input generator that produces snapshots arguments"," *"," * Copyright (c) 2013 - 2017 Alex Grant, LocalNerve, contributors"," * Licensed under the MIT license."," */","\"use strict\";","","module.exports = {","  /**","   * create","   * Creates the input generator based on the input string, which must match a","   * js file in this directory.","   * So, if input === \"robots\", then executes require(\"./robots\");","   * Unsupported input generator types return a \"null\" generator.","   *","   * @param {String} input - The name of the input generator to create.","   * @returns {Object} The input generator, a null generator on error.","   */","  create: function (input) {","    var result = {","      run: function () {","        return [];","      },","      __null: true","    },","    hasInput;","","    if (input) {","      input = (\"\"+input).replace(\" \", \"\").toLowerCase();","      hasInput = input && input.charAt(0) !== '_' && input !== \"index\";","    }","","    try {","      if (hasInput) {","        result = require( \"./\" + input);","      }","    } catch (e) {","      console.error(\"Input generator load failed '\" + input + \"'\", e)","      /* return the \"null\" generator on error */","    }","","    return result;","  },","","  /**","   * Determine if an input generator is null (bogus).","   * If the generator has __null defined, then its bogus.","   *","   * @param {Object} generator - An input generator.","   * @returns {Boolean} True if the given generator is bogus, false otherwise.","   */","  isNull: function (generator) {","    return generator.__null !== void 0;","  }","};",""],"l":{"12":1,"24":0,"26":0,"32":0,"33":0,"34":0,"37":0,"38":0,"39":0,"42":0,"46":0,"57":0}},"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/async/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/async/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":1},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0},"fnMap":{"1":{"name":"NOOP","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":17}}},"2":{"name":"createLockFactory","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":30}}},"3":{"name":"lockFactory","line":38,"loc":{"start":{"line":38,"column":9},"end":{"line":38,"column":44}}},"4":{"name":"protectedContext","line":39,"loc":{"start":{"line":39,"column":11},"end":{"line":39,"column":40}}},"5":{"name":"(anonymous_5)","line":40,"loc":{"start":{"line":40,"column":38},"end":{"line":40,"column":54}}},"6":{"name":"(anonymous_6)","line":41,"loc":{"start":{"line":41,"column":11},"end":{"line":41,"column":23}}},"7":{"name":"Notifier","line":56,"loc":{"start":{"line":56,"column":0},"end":{"line":56,"column":21}}},"8":{"name":"qEmpty","line":97,"loc":{"start":{"line":97,"column":10},"end":{"line":97,"column":29}}},"9":{"name":"start","line":113,"loc":{"start":{"line":113,"column":9},"end":{"line":113,"column":56}}},"10":{"name":"(anonymous_10)","line":131,"loc":{"start":{"line":131,"column":48},"end":{"line":131,"column":64}}},"11":{"name":"(anonymous_11)","line":136,"loc":{"start":{"line":136,"column":50},"end":{"line":136,"column":66}}},"12":{"name":"(anonymous_12)","line":141,"loc":{"start":{"line":141,"column":18},"end":{"line":141,"column":35}}},"13":{"name":"(anonymous_13)","line":145,"loc":{"start":{"line":145,"column":30},"end":{"line":145,"column":46}}},"14":{"name":"(anonymous_14)","line":153,"loc":{"start":{"line":153,"column":33},"end":{"line":153,"column":45}}},"15":{"name":"isStarted","line":180,"loc":{"start":{"line":180,"column":13},"end":{"line":180,"column":35}}},"16":{"name":"add","line":190,"loc":{"start":{"line":190,"column":7},"end":{"line":190,"column":42}}},"17":{"name":"(anonymous_17)","line":205,"loc":{"start":{"line":205,"column":40},"end":{"line":205,"column":56}}},"18":{"name":"(anonymous_18)","line":211,"loc":{"start":{"line":211,"column":18},"end":{"line":211,"column":38}}},"19":{"name":"(anonymous_19)","line":226,"loc":{"start":{"line":226,"column":33},"end":{"line":226,"column":45}}},"20":{"name":"_exists","line":254,"loc":{"start":{"line":254,"column":11},"end":{"line":254,"column":41}}},"21":{"name":"known","line":264,"loc":{"start":{"line":264,"column":9},"end":{"line":264,"column":37}}},"22":{"name":"(anonymous_22)","line":266,"loc":{"start":{"line":266,"column":19},"end":{"line":266,"column":35}}},"23":{"name":"_remove","line":281,"loc":{"start":{"line":281,"column":11},"end":{"line":281,"column":47}}},"24":{"name":"remove","line":300,"loc":{"start":{"line":300,"column":10},"end":{"line":300,"column":45}}},"25":{"name":"(anonymous_25)","line":301,"loc":{"start":{"line":301,"column":19},"end":{"line":301,"column":36}}},"26":{"name":"_fileCount","line":312,"loc":{"start":{"line":312,"column":14},"end":{"line":312,"column":37}}},"27":{"name":"_isDone","line":321,"loc":{"start":{"line":321,"column":11},"end":{"line":321,"column":31}}},"28":{"name":"_setError","line":331,"loc":{"start":{"line":331,"column":13},"end":{"line":331,"column":40}}},"29":{"name":"setError","line":341,"loc":{"start":{"line":341,"column":12},"end":{"line":341,"column":38}}},"30":{"name":"(anonymous_30)","line":342,"loc":{"start":{"line":342,"column":19},"end":{"line":342,"column":35}}},"31":{"name":"getError","line":353,"loc":{"start":{"line":353,"column":12},"end":{"line":353,"column":33}}},"32":{"name":"_closeWatcher","line":360,"loc":{"start":{"line":360,"column":17},"end":{"line":360,"column":43}}},"33":{"name":"abort","line":378,"loc":{"start":{"line":378,"column":9},"end":{"line":378,"column":33}}},"34":{"name":"(anonymous_34)","line":379,"loc":{"start":{"line":379,"column":19},"end":{"line":379,"column":35}}},"35":{"name":"(anonymous_35)","line":382,"loc":{"start":{"line":382,"column":40},"end":{"line":382,"column":55}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":31}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":38}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":46}},"4":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}},"5":{"start":{"line":18,"column":0},"end":{"line":18,"column":19}},"6":{"start":{"line":19,"column":0},"end":{"line":19,"column":28}},"7":{"start":{"line":20,"column":0},"end":{"line":20,"column":19}},"8":{"start":{"line":25,"column":0},"end":{"line":49,"column":1}},"9":{"start":{"line":27,"column":2},"end":{"line":27,"column":29}},"10":{"start":{"line":30,"column":2},"end":{"line":30,"column":51}},"11":{"start":{"line":38,"column":2},"end":{"line":48,"column":4}},"12":{"start":{"line":39,"column":4},"end":{"line":47,"column":6}},"13":{"start":{"line":40,"column":6},"end":{"line":46,"column":9}},"14":{"start":{"line":41,"column":8},"end":{"line":43,"column":11}},"15":{"start":{"line":42,"column":10},"end":{"line":42,"column":24}},"16":{"start":{"line":56,"column":0},"end":{"line":91,"column":1}},"17":{"start":{"line":59,"column":2},"end":{"line":59,"column":39}},"18":{"start":{"line":64,"column":2},"end":{"line":64,"column":18}},"19":{"start":{"line":67,"column":2},"end":{"line":67,"column":22}},"20":{"start":{"line":70,"column":2},"end":{"line":70,"column":25}},"21":{"start":{"line":73,"column":2},"end":{"line":73,"column":19}},"22":{"start":{"line":76,"column":2},"end":{"line":76,"column":38}},"23":{"start":{"line":79,"column":2},"end":{"line":79,"column":23}},"24":{"start":{"line":90,"column":2},"end":{"line":90,"column":22}},"25":{"start":{"line":93,"column":0},"end":{"line":398,"column":2}},"26":{"start":{"line":98,"column":4},"end":{"line":98,"column":23}},"27":{"start":{"line":114,"column":4},"end":{"line":118,"column":8}},"28":{"start":{"line":120,"column":4},"end":{"line":170,"column":5}},"29":{"start":{"line":121,"column":6},"end":{"line":123,"column":7}},"30":{"start":{"line":122,"column":8},"end":{"line":122,"column":52}},"31":{"start":{"line":125,"column":6},"end":{"line":125,"column":31}},"32":{"start":{"line":126,"column":6},"end":{"line":126,"column":49}},"33":{"start":{"line":131,"column":6},"end":{"line":166,"column":44}},"34":{"start":{"line":132,"column":8},"end":{"line":132,"column":24}},"35":{"start":{"line":133,"column":8},"end":{"line":133,"column":65}},"36":{"start":{"line":135,"column":8},"end":{"line":165,"column":9}},"37":{"start":{"line":136,"column":10},"end":{"line":162,"column":15}},"38":{"start":{"line":137,"column":12},"end":{"line":139,"column":15}},"39":{"start":{"line":142,"column":14},"end":{"line":142,"column":43}},"40":{"start":{"line":144,"column":14},"end":{"line":160,"column":15}},"41":{"start":{"line":145,"column":16},"end":{"line":147,"column":19}},"42":{"start":{"line":146,"column":18},"end":{"line":146,"column":51}},"43":{"start":{"line":149,"column":16},"end":{"line":157,"column":17}},"44":{"start":{"line":150,"column":18},"end":{"line":150,"column":39}},"45":{"start":{"line":151,"column":18},"end":{"line":156,"column":19}},"46":{"start":{"line":152,"column":20},"end":{"line":152,"column":41}},"47":{"start":{"line":153,"column":20},"end":{"line":155,"column":23}},"48":{"start":{"line":154,"column":22},"end":{"line":154,"column":64}},"49":{"start":{"line":159,"column":16},"end":{"line":159,"column":33}},"50":{"start":{"line":161,"column":14},"end":{"line":161,"column":21}},"51":{"start":{"line":164,"column":10},"end":{"line":164,"column":17}},"52":{"start":{"line":169,"column":6},"end":{"line":169,"column":86}},"53":{"start":{"line":172,"column":4},"end":{"line":172,"column":18}},"54":{"start":{"line":181,"column":4},"end":{"line":181,"column":49}},"55":{"start":{"line":191,"column":4},"end":{"line":191,"column":30}},"56":{"start":{"line":192,"column":4},"end":{"line":192,"column":14}},"57":{"start":{"line":194,"column":4},"end":{"line":196,"column":5}},"58":{"start":{"line":195,"column":6},"end":{"line":195,"column":56}},"59":{"start":{"line":198,"column":4},"end":{"line":245,"column":5}},"60":{"start":{"line":200,"column":6},"end":{"line":200,"column":74}},"61":{"start":{"line":202,"column":6},"end":{"line":202,"column":29}},"62":{"start":{"line":205,"column":6},"end":{"line":239,"column":56}},"63":{"start":{"line":206,"column":8},"end":{"line":206,"column":24}},"64":{"start":{"line":209,"column":8},"end":{"line":238,"column":9}},"65":{"start":{"line":210,"column":10},"end":{"line":235,"column":15}},"66":{"start":{"line":212,"column":14},"end":{"line":212,"column":43}},"67":{"start":{"line":214,"column":14},"end":{"line":233,"column":15}},"68":{"start":{"line":215,"column":16},"end":{"line":219,"column":17}},"69":{"start":{"line":216,"column":18},"end":{"line":218,"column":21}},"70":{"start":{"line":220,"column":16},"end":{"line":220,"column":51}},"71":{"start":{"line":222,"column":16},"end":{"line":230,"column":17}},"72":{"start":{"line":223,"column":18},"end":{"line":223,"column":39}},"73":{"start":{"line":224,"column":18},"end":{"line":229,"column":19}},"74":{"start":{"line":225,"column":20},"end":{"line":225,"column":41}},"75":{"start":{"line":226,"column":20},"end":{"line":228,"column":23}},"76":{"start":{"line":227,"column":22},"end":{"line":227,"column":64}},"77":{"start":{"line":232,"column":16},"end":{"line":232,"column":33}},"78":{"start":{"line":234,"column":14},"end":{"line":234,"column":21}},"79":{"start":{"line":237,"column":10},"end":{"line":237,"column":17}},"80":{"start":{"line":242,"column":6},"end":{"line":244,"column":8}},"81":{"start":{"line":255,"column":4},"end":{"line":255,"column":38}},"82":{"start":{"line":265,"column":4},"end":{"line":265,"column":23}},"83":{"start":{"line":266,"column":4},"end":{"line":270,"column":28}},"84":{"start":{"line":267,"column":6},"end":{"line":268,"column":76}},"85":{"start":{"line":269,"column":6},"end":{"line":269,"column":13}},"86":{"start":{"line":271,"column":4},"end":{"line":271,"column":18}},"87":{"start":{"line":282,"column":4},"end":{"line":290,"column":5}},"88":{"start":{"line":283,"column":6},"end":{"line":287,"column":7}},"89":{"start":{"line":284,"column":8},"end":{"line":284,"column":40}},"90":{"start":{"line":286,"column":8},"end":{"line":286,"column":43}},"91":{"start":{"line":288,"column":6},"end":{"line":288,"column":49}},"92":{"start":{"line":289,"column":6},"end":{"line":289,"column":36}},"93":{"start":{"line":301,"column":4},"end":{"line":304,"column":28}},"94":{"start":{"line":302,"column":6},"end":{"line":302,"column":37}},"95":{"start":{"line":303,"column":6},"end":{"line":303,"column":14}},"96":{"start":{"line":313,"column":4},"end":{"line":313,"column":42}},"97":{"start":{"line":322,"column":4},"end":{"line":322,"column":50}},"98":{"start":{"line":332,"column":4},"end":{"line":332,"column":28}},"99":{"start":{"line":342,"column":4},"end":{"line":345,"column":28}},"100":{"start":{"line":343,"column":6},"end":{"line":343,"column":28}},"101":{"start":{"line":344,"column":6},"end":{"line":344,"column":13}},"102":{"start":{"line":354,"column":4},"end":{"line":354,"column":75}},"103":{"start":{"line":361,"column":4},"end":{"line":364,"column":5}},"104":{"start":{"line":362,"column":6},"end":{"line":362,"column":34}},"105":{"start":{"line":363,"column":6},"end":{"line":363,"column":26}},"106":{"start":{"line":379,"column":4},"end":{"line":396,"column":28}},"107":{"start":{"line":380,"column":6},"end":{"line":394,"column":7}},"108":{"start":{"line":382,"column":8},"end":{"line":385,"column":17}},"109":{"start":{"line":383,"column":10},"end":{"line":383,"column":47}},"110":{"start":{"line":384,"column":10},"end":{"line":384,"column":34}},"111":{"start":{"line":388,"column":8},"end":{"line":388,"column":34}},"112":{"start":{"line":391,"column":8},"end":{"line":391,"column":28}},"113":{"start":{"line":393,"column":8},"end":{"line":393,"column":25}},"114":{"start":{"line":395,"column":6},"end":{"line":395,"column":13}},"115":{"start":{"line":400,"column":0},"end":{"line":403,"column":2}}},"branchMap":{"1":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":6},"end":{"line":115,"column":22}},{"start":{"line":116,"column":6},"end":{"line":116,"column":36}},{"start":{"line":117,"column":7},"end":{"line":117,"column":14}}]},"2":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":120,"column":4}},{"start":{"line":120,"column":4},"end":{"line":120,"column":4}}]},"3":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":6},"end":{"line":121,"column":6}},{"start":{"line":121,"column":6},"end":{"line":121,"column":6}}]},"4":{"line":133,"type":"binary-expr","locations":[{"start":{"line":133,"column":18},"end":{"line":133,"column":49}},{"start":{"line":133,"column":53},"end":{"line":133,"column":64}}]},"5":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":135,"column":8}},{"start":{"line":135,"column":8},"end":{"line":135,"column":8}}]},"6":{"line":146,"type":"binary-expr","locations":[{"start":{"line":146,"column":18},"end":{"line":146,"column":22}},{"start":{"line":146,"column":26},"end":{"line":146,"column":50}}]},"7":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":16},"end":{"line":149,"column":16}},{"start":{"line":149,"column":16},"end":{"line":149,"column":16}}]},"8":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":18},"end":{"line":151,"column":18}},{"start":{"line":151,"column":18},"end":{"line":151,"column":18}}]},"9":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":4},"end":{"line":194,"column":4}},{"start":{"line":194,"column":4},"end":{"line":194,"column":4}}]},"10":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":4},"end":{"line":198,"column":4}},{"start":{"line":198,"column":4},"end":{"line":198,"column":4}}]},"11":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":8},"end":{"line":209,"column":8}},{"start":{"line":209,"column":8},"end":{"line":209,"column":8}}]},"12":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":16},"end":{"line":215,"column":16}},{"start":{"line":215,"column":16},"end":{"line":215,"column":16}}]},"13":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":16},"end":{"line":222,"column":16}},{"start":{"line":222,"column":16},"end":{"line":222,"column":16}}]},"14":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":18},"end":{"line":224,"column":18}},{"start":{"line":224,"column":18},"end":{"line":224,"column":18}}]},"15":{"line":268,"type":"binary-expr","locations":[{"start":{"line":268,"column":8},"end":{"line":268,"column":32}},{"start":{"line":268,"column":36},"end":{"line":268,"column":75}}]},"16":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":4},"end":{"line":282,"column":4}},{"start":{"line":282,"column":4},"end":{"line":282,"column":4}}]},"17":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":6},"end":{"line":283,"column":6}},{"start":{"line":283,"column":6},"end":{"line":283,"column":6}}]},"18":{"line":322,"type":"binary-expr","locations":[{"start":{"line":322,"column":11},"end":{"line":322,"column":34}},{"start":{"line":322,"column":38},"end":{"line":322,"column":49}}]},"19":{"line":354,"type":"cond-expr","locations":[{"start":{"line":354,"column":36},"end":{"line":354,"column":62}},{"start":{"line":354,"column":65},"end":{"line":354,"column":74}}]},"20":{"line":361,"type":"if","locations":[{"start":{"line":361,"column":4},"end":{"line":361,"column":4}},{"start":{"line":361,"column":4},"end":{"line":361,"column":4}}]}},"code":["/**"," * index.js"," *"," * Async stuff for html-snapshots"," *   Notifier class"," *"," * Copyright (c) 2013 - 2017, Alex Grant, LocalNerve, contributors"," * Licensed under the MIT license."," */","/* global Promise */","\"use strict\";","","var crypto = require(\"crypto\");","var AsyncLock = require(\"async-lock\");","var combineErrors = require(\"combine-errors\");","var pathExists = require(\"./exists\");","","var L_WAIT = 10000;","var TIMEOUT_PAD_FLOOR = 800;","function NOOP () {}","","/**"," * Create the lock factory."," */","function createLockFactory () {","  // Create the per instance async lock.","  var lock = new AsyncLock();","","  // Make a random id","  var rid = crypto.randomBytes(16).toString(\"hex\");","","  /**","   * Force a serial execution context.","   *","   * @param {Function} fn - The function to guard.","   * @param {Number} timeout - The max time to wait for the lock.","   */","  return function lockFactory (fn, timeout) {","    return function protectedContext () {","      lock.acquire(\"cs-guard-\" + rid, function (done) {","        fn(function () {","          done(null, 0);","        });","      }, NOOP, {","        timeout: timeout","      });","    };","  };","}","","/**"," * Notifier Constructor"," * Polls the outputDir and when all the files exist,"," * calls the listener indicating the snapshots are done."," */","function Notifier () {","","  // Create the serial execution context mechanism.","  this.csFactory = createLockFactory();","","  // The private files collection","  // Contains a file and timer: \"filename\": {timer: timerid}","  // Used for tracking work left to do. When empty, work is done.","  this.files = {};","","  // Contains files successfully processed","  this.filesDone = [];","","  // Contains files unsuccessfully processed","  this.filesNotDone = [];","","  // true if a timeout occurred, or set by abort","  this.errors = [];","","  // the holder of the current failure timeout padding","  this.padTimeout = TIMEOUT_PAD_FLOOR;","","  // our reference to the listener","  this.callback = null;","","  // our reference to the watcher (an interval id)","  // initial value undefined is important","  // this.watcher;","","  // the working pollInterval for this run","  // this.interval","","  // flag set by qEmpty callback","  // when the last item from the queue is given to a worker","  this.qempty = false;","}","","Notifier.prototype = {","  /**","   * Set the qempty flag to true.","   */","  qEmpty: function qEmpty () {","    this.qempty = true;","  },","","  /**","   * Start a watch interval, when a file exists, remove it from our files array.","   * If the files array is empty, call the listener and stop the watch interval.","   *","   * @param {Number} pollInterval - The millisecond poll interval to check for","   * file completion.","   * @param {Object} input - The inputGenerator.","   * @param {Function} listener - The callback to notify when complete.","   * @param {Function} input.EOI - The inputGenerator function that signals end","   * of input.","   * @returns {Boolean} true if started successfully, false otherwise.","   */","  start: function start (pollInterval, input, listener) {","    var result = (","      pollInterval > 0 &&","      typeof listener === \"function\" &&","      (!!input)","      );","","    if (result) {","      if (this.isStarted()) {","        throw new Error(\"Notifier already started\");","      }","","      this.callback = listener;","      this.interval = parseInt(pollInterval, 10);","","      // Poll the filesystem for the files to exist","      // Checks the child process expected output to determine success or failure","      // if the file exists, then it succeeded.","      this.watcher = setInterval(this.csFactory(function (done) {","        var self = this;","        var eoi = typeof input.EOI === \"function\" && input.EOI();","","        if (eoi) {","          Promise.all(Object.keys(self.files).map(function (file) {","            return pathExists(file, {","              returnFile: true","            });","          }))","            .then(function (files) {","              var callback = self.callback;","","              try {","                files.forEach(function (file) {","                  file && self._remove(file, true);","                });","","                if (self._isDone()) {","                  self._closeWatcher();","                  if (self.callback) {","                    self.callback = null;","                    setImmediate(function () {","                      callback(self.getError(), self.filesDone);","                    });","                  }","                }","              } catch (e) {","                console.error(e);","              }","              done();","            });","        } else {","          done();","        }","      }.bind(this), L_WAIT), this.interval);","","    } else {","      console.error(\"Bad poll interval, async listener, or input generator supplied\");","    }","","    return result;","  },","","  /**","   * Indicates if start has been called.","   *","   * @returns {Boolean} true if start has been called, false otherwise.","   */","  isStarted: function isStarted () {","    return (typeof this.watcher !== \"undefined\");","  },","","  /**","   * Add a file to the files array if it's not there.","   *","   * @param {String} outputFile - The full path to the output file to add.","   * @param {Number} timeout - timeout milliseconds to wait (max).","   */","  add: function add (outputFile, timeout) {","    var failTimeout = timeout;","    var timer;","","    if (!this.isStarted()) {","      throw new Error(\"MUST call `start` before `add`\");","    }","","    if (!this._exists(outputFile)) {","      // make sure we evaluate after the child process","      failTimeout = parseInt(timeout, 10) + parseInt(this.padTimeout, 10);","      // Stagger and grow the failure timeout padding, add 1s every 10 processes","      this.padTimeout += 100;","","      // setup a timeout handler to detect failure","      timer = setTimeout(this.csFactory(function (done) {","        var self = this;","","        // if the output file has not already been removed","        if (self._exists(outputFile)) {","          pathExists(outputFile)","            .then(function (fsExists) {","              var callback = self.callback;","","              try {","                if (!fsExists) {","                  self._setError(new Error(","                    \"'\" + outputFile + \"' did not get a snapshot before timeout\"","                  ));","                }","                self._remove(outputFile, fsExists);","","                if (self._isDone()) {","                  self._closeWatcher();","                  if (self.callback) {","                    self.callback = null;","                    setImmediate(function () {","                      callback(self.getError(), self.filesDone);","                    });","                  }","                }","              } catch (e) {","                console.error(e);","              }","              done();","            });","        } else {","          done();","        }","      }.bind(this), L_WAIT), parseInt(failTimeout, 10));","","      // add the file tracking object","      this.files[outputFile] = {","        timer: timer","      };","    }","  },","","  /**","   * Check if a file exists in the internal files array.","   *","   * @param {String} outputFile - The outputFile to check.","   * @returns {Boolean} true if the file exists, false otherwise.","   */","  _exists: function _exists (outputFile) {","    return (!!this.files[outputFile]);","  },","","  /**","   * Check if a file is being processed or has already been processed.","   *","   * @param {String} outputFile - The outputFile to check.","   * @returns {Boolean} true if the fi","   */","  known: function known (outputFile) {","    var result = false;","    this.csFactory(function (done) {","      result =","        this._exists(outputFile) || this.filesDone.indexOf(outputFile) > -1;","      done();","    }.bind(this), L_WAIT)();","    return result;","  },","","  /**","   * Remove a file from the files array if it's there.","   * Unprotected version.","   *","   * @param {String} outputFile - The outputFile to remove.","   * @param {Boolean} done - If true, add to filesDone collection.","   */","  _remove: function _remove (outputFile, done) {","    if (this._exists(outputFile)) {","      if (done) {","        this.filesDone.push(outputFile);","      } else {","        this.filesNotDone.push(outputFile);","      }","      clearTimeout(this.files[outputFile].timer);","      delete this.files[outputFile];","    }","  },","","  /**","   * Remove a file from the files array if it's there.","   * Protected version.","   *","   * @param {String} outputFile - The outputFile to remove.","   * @param {Boolean} done - If true, add to filesDone collection.","   */","  remove: function remove (outputFile, done) {","    this.csFactory(function (_done) {","      this._remove(outputFile, done);","      _done();","    }.bind(this), L_WAIT)();","  },","","  /**","   * Audit the file count.","   *","   * @returns {Number} the number of files being watched at the moment.","   */","  _fileCount: function _fileCount () {","    return Object.keys(this.files).length;","  },","","  /**","   * Check if there is anything left to watch.","   *","   * @returns {Boolean} true if processing is done, false otherwise.","   */","  _isDone: function _isDone () {","    return this._fileCount() === 0 && this.qempty;","  },","","  /**","   * Set the error, saves to a collection of errors.","   * Unprotected version.","   *","   * @param {Object} value - The error to set.","   */","  _setError: function _setError (value) {","    this.errors.push(value);","  },","","  /**","   * Set the error property, if not already set.","   * Protected version.","   *","   * @param {Object} value - The error to set.","   */","  setError: function setError (value) {","    this.csFactory(function (done) {","      this._setError(value);","      done();","    }.bind(this), L_WAIT)();","  },","","  /**","   * Get the error property.","   *","   * @returns {Object} The error property.","   */","  getError: function getError () {","    return this.errors.length > 0 ? combineErrors(this.errors) : undefined;","  },","","  /**","   * End file watching.","   */","  _closeWatcher: function _closeWatcher () {","    if (this.watcher) {","      clearInterval(this.watcher);","      this.watcher = null;","    }","  },","","  /**","   * Provides a way to abort what this is doing.","   * Causes conditions so that, if isStarted, the poll interval will exit,","   *   cleanup, and call the listener back.","   * If not started, the listener does not get called. This relationship","   *   is set in html-snapshots.js: listener == notifier.start","   *","   * @param {Object} q - The worker queue, expected created by async.queue.","   * @param {Function} q.length - Gets the worker queue length.","   * @param {Object} [err] - The error object to set.","   */","  abort: function abort (q, err) {","    this.csFactory(function (done) {","      try {","        // for each file, clearTimeout and delete the object","        Object.keys(this.files).forEach(function(file) {","          clearTimeout(this.files[file].timer);","          delete this.files[file];","        }, this);","","        // if nothing is waiting, make sure empty is set","        this.qempty = !q.length();","","        // set the error","        this._setError(err);","      } catch (e) {","        console.error(e);","      }","      done();","    }.bind(this), L_WAIT)();","  }","};","","module.exports = {","  Notifier: Notifier,","  TIMEOUT_PAD_FLOOR: TIMEOUT_PAD_FLOOR","};",""],"l":{"13":1,"14":1,"15":1,"16":1,"18":1,"19":1,"20":1,"25":1,"27":0,"30":0,"38":0,"39":0,"40":0,"41":0,"42":0,"56":1,"59":0,"64":0,"67":0,"70":0,"73":0,"76":0,"79":0,"90":0,"93":1,"98":0,"114":0,"120":0,"121":0,"122":0,"125":0,"126":0,"131":0,"132":0,"133":0,"135":0,"136":0,"137":0,"142":0,"144":0,"145":0,"146":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"159":0,"161":0,"164":0,"169":0,"172":0,"181":0,"191":0,"192":0,"194":0,"195":0,"198":0,"200":0,"202":0,"205":0,"206":0,"209":0,"210":0,"212":0,"214":0,"215":0,"216":0,"220":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"232":0,"234":0,"237":0,"242":0,"255":0,"265":0,"266":0,"267":0,"269":0,"271":0,"282":0,"283":0,"284":0,"286":0,"288":0,"289":0,"301":0,"302":0,"303":0,"313":0,"322":0,"332":0,"342":0,"343":0,"344":0,"354":0,"361":0,"362":0,"363":0,"379":0,"380":0,"382":0,"383":0,"384":0,"388":0,"391":0,"393":0,"395":0,"400":1}},"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/async/exists.js":{"path":"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/async/exists.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"pathExists","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":36}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":10},"end":{"line":31,"column":22}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":11},"end":{"line":34,"column":23}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":23}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":41}},"3":{"start":{"line":24,"column":0},"end":{"line":40,"column":1}},"4":{"start":{"line":25,"column":2},"end":{"line":27,"column":4}},"5":{"start":{"line":30,"column":2},"end":{"line":39,"column":7}},"6":{"start":{"line":32,"column":6},"end":{"line":32,"column":46}},"7":{"start":{"line":35,"column":6},"end":{"line":37,"column":7}},"8":{"start":{"line":36,"column":8},"end":{"line":36,"column":48}},"9":{"start":{"line":38,"column":6},"end":{"line":38,"column":19}},"10":{"start":{"line":42,"column":0},"end":{"line":42,"column":28}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":12},"end":{"line":25,"column":19}},{"start":{"line":25,"column":23},"end":{"line":27,"column":3}}]},"2":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":34},"end":{"line":32,"column":38}},{"start":{"line":32,"column":41},"end":{"line":32,"column":45}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":6},"end":{"line":35,"column":6}},{"start":{"line":35,"column":6},"end":{"line":35,"column":6}}]},"4":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":36},"end":{"line":36,"column":40}},{"start":{"line":36,"column":43},"end":{"line":36,"column":47}}]}},"code":["/**"," * exists.js"," *"," * Robust exists check for snapshot files."," * Empirically, I found that either one of these NodeJS checks can fail,"," * but both don't. This is a workaround."," *"," * Copyright (c) 2013 - 2017, Alex Grant, LocalNerve, contributors"," * Licensed under the MIT license."," */","","var fs = require(\"fs\");","var nodeCall = require(\"../common/node\");","","/**"," * Check if a path exists."," *"," * @param {String} path - The full path to the file to check."," * @param {Object} [options] - fileExists options."," * @param {Boolean} [options.returnFile] - If true, resolve to input filename on"," * success. Otherwise, resolve to boolean. Defaults to false (boolean)."," * @returns {Promise} Resolves to true (or file) if exists, false otherwise."," */","function pathExists (path, options) {","  options = options || {","    returnFile: false","  };","","  // Defaults to F_OK","  return nodeCall(fs.access, path)","    .then(function () {","      return options.returnFile ? path : true;","    })","    .catch(function () {","      if (fs.existsSync(path)) {","        return options.returnFile ? path : true;","      }","      return false;","    });","}","","module.exports = pathExists;",""],"l":{"12":1,"13":1,"24":1,"25":0,"30":0,"32":0,"35":0,"36":0,"38":0,"42":1}},"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/common/node.js":{"path":"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/common/node.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"nodeCall","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":43}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":21},"end":{"line":18,"column":48}}},"3":{"name":"nodeResolver","line":22,"loc":{"start":{"line":22,"column":4},"end":{"line":22,"column":39}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":33,"column":1}},"2":{"start":{"line":16,"column":2},"end":{"line":16,"column":58}},"3":{"start":{"line":18,"column":2},"end":{"line":32,"column":5}},"4":{"start":{"line":22,"column":4},"end":{"line":28,"column":5}},"5":{"start":{"line":23,"column":6},"end":{"line":27,"column":7}},"6":{"start":{"line":24,"column":8},"end":{"line":24,"column":20}},"7":{"start":{"line":26,"column":8},"end":{"line":26,"column":23}},"8":{"start":{"line":30,"column":4},"end":{"line":30,"column":32}},"9":{"start":{"line":31,"column":4},"end":{"line":31,"column":39}},"10":{"start":{"line":35,"column":0},"end":{"line":35,"column":26}}},"branchMap":{"1":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":6},"end":{"line":23,"column":6}},{"start":{"line":23,"column":6},"end":{"line":23,"column":6}}]}},"code":["/***"," * nodeCall"," *"," * Copyright (c) 2013 - 2017, Alex Grant, LocalNerve, contributors"," * Licensed under the MIT license."," */","/* global Promise */","\"use strict\";","","/**"," * Utility to promisify a Node function"," *"," * @param {Function} nodeFunc - The node-style function to Promisify."," */","function nodeCall (nodeFunc /* args... */) {","  var nodeArgs = Array.prototype.slice.call(arguments, 1);","","  return new Promise(function (resolve, reject) {","    /**","     * Resolve a node callback","     */","    function nodeResolver (err, value) {","      if (err) {","        reject(err);","      } else {","        resolve(value);","      }","    }","","    nodeArgs.push(nodeResolver);","    nodeFunc.apply(nodeFunc, nodeArgs);","  });","}","","module.exports = nodeCall;",""],"l":{"15":1,"16":0,"18":0,"22":1,"23":0,"24":0,"26":0,"30":0,"31":0,"35":1}},"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/common/sitemap.js":{"path":"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/common/sitemap.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"stillCurrent","line":46,"loc":{"start":{"line":46,"column":0},"end":{"line":46,"column":41}}},"2":{"name":"parse","line":88,"loc":{"start":{"line":88,"column":0},"end":{"line":88,"column":45}}},"3":{"name":"(anonymous_3)","line":93,"loc":{"start":{"line":93,"column":5},"end":{"line":93,"column":28}}},"4":{"name":"(anonymous_4)","line":105,"loc":{"start":{"line":105,"column":8},"end":{"line":105,"column":27}}},"5":{"name":"convert","line":145,"loc":{"start":{"line":145,"column":0},"end":{"line":145,"column":50}}},"6":{"name":"(anonymous_6)","line":149,"loc":{"start":{"line":149,"column":24},"end":{"line":149,"column":47}}},"7":{"name":"getUrl","line":171,"loc":{"start":{"line":171,"column":0},"end":{"line":171,"column":45}}},"8":{"name":"(anonymous_8)","line":176,"loc":{"start":{"line":176,"column":5},"end":{"line":176,"column":31}}},"9":{"name":"getFile","line":195,"loc":{"start":{"line":195,"column":0},"end":{"line":195,"column":46}}},"10":{"name":"(anonymous_10)","line":196,"loc":{"start":{"line":196,"column":30},"end":{"line":196,"column":51}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":23}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":27}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":26}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":27}},"5":{"start":{"line":16,"column":0},"end":{"line":16,"column":26}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":31}},"7":{"start":{"line":18,"column":0},"end":{"line":18,"column":33}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":32}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":48}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":43}},"11":{"start":{"line":26,"column":0},"end":{"line":34,"column":2}},"12":{"start":{"line":46,"column":0},"end":{"line":75,"column":1}},"13":{"start":{"line":47,"column":2},"end":{"line":47,"column":29}},"14":{"start":{"line":48,"column":2},"end":{"line":48,"column":23}},"15":{"start":{"line":49,"column":2},"end":{"line":49,"column":38}},"16":{"start":{"line":50,"column":2},"end":{"line":50,"column":93}},"17":{"start":{"line":53,"column":2},"end":{"line":72,"column":3}},"18":{"start":{"line":55,"column":4},"end":{"line":55,"column":53}},"19":{"start":{"line":57,"column":4},"end":{"line":57,"column":97}},"20":{"start":{"line":58,"column":4},"end":{"line":58,"column":37}},"21":{"start":{"line":61,"column":7},"end":{"line":72,"column":3}},"22":{"start":{"line":63,"column":4},"end":{"line":63,"column":53}},"23":{"start":{"line":65,"column":4},"end":{"line":65,"column":97}},"24":{"start":{"line":66,"column":4},"end":{"line":66,"column":53}},"25":{"start":{"line":70,"column":4},"end":{"line":70,"column":49}},"26":{"start":{"line":71,"column":4},"end":{"line":71,"column":53}},"27":{"start":{"line":74,"column":2},"end":{"line":74,"column":27}},"28":{"start":{"line":88,"column":0},"end":{"line":134,"column":1}},"29":{"start":{"line":89,"column":2},"end":{"line":133,"column":5}},"30":{"start":{"line":94,"column":4},"end":{"line":94,"column":32}},"31":{"start":{"line":96,"column":4},"end":{"line":130,"column":5}},"32":{"start":{"line":102,"column":6},"end":{"line":129,"column":8}},"33":{"start":{"line":107,"column":10},"end":{"line":109,"column":48}},"34":{"start":{"line":111,"column":10},"end":{"line":125,"column":11}},"35":{"start":{"line":113,"column":12},"end":{"line":113,"column":45}},"36":{"start":{"line":114,"column":12},"end":{"line":124,"column":13}},"37":{"start":{"line":122,"column":14},"end":{"line":122,"column":38}},"38":{"start":{"line":123,"column":14},"end":{"line":123,"column":42}},"39":{"start":{"line":127,"column":10},"end":{"line":127,"column":21}},"40":{"start":{"line":132,"column":4},"end":{"line":132,"column":56}},"41":{"start":{"line":145,"column":0},"end":{"line":160,"column":1}},"42":{"start":{"line":146,"column":2},"end":{"line":146,"column":54}},"43":{"start":{"line":148,"column":2},"end":{"line":159,"column":3}},"44":{"start":{"line":149,"column":4},"end":{"line":155,"column":7}},"45":{"start":{"line":150,"column":6},"end":{"line":154,"column":7}},"46":{"start":{"line":151,"column":8},"end":{"line":151,"column":68}},"47":{"start":{"line":153,"column":8},"end":{"line":153,"column":61}},"48":{"start":{"line":158,"column":4},"end":{"line":158,"column":47}},"49":{"start":{"line":171,"column":0},"end":{"line":185,"column":1}},"50":{"start":{"line":172,"column":2},"end":{"line":184,"column":5}},"51":{"start":{"line":177,"column":4},"end":{"line":177,"column":82}},"52":{"start":{"line":179,"column":4},"end":{"line":183,"column":5}},"53":{"start":{"line":180,"column":6},"end":{"line":180,"column":68}},"54":{"start":{"line":182,"column":6},"end":{"line":182,"column":48}},"55":{"start":{"line":195,"column":0},"end":{"line":203,"column":1}},"56":{"start":{"line":196,"column":2},"end":{"line":202,"column":5}},"57":{"start":{"line":197,"column":4},"end":{"line":201,"column":5}},"58":{"start":{"line":198,"column":6},"end":{"line":198,"column":66}},"59":{"start":{"line":200,"column":6},"end":{"line":200,"column":48}},"60":{"start":{"line":205,"column":0},"end":{"line":210,"column":2}}},"branchMap":{"1":{"line":50,"type":"cond-expr","locations":[{"start":{"line":50,"column":44},"end":{"line":50,"column":85}},{"start":{"line":50,"column":88},"end":{"line":50,"column":92}}]},"2":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":53,"column":2}},{"start":{"line":53,"column":2},"end":{"line":53,"column":2}}]},"3":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":6},"end":{"line":53,"column":10}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":22},"end":{"line":57,"column":42}},{"start":{"line":57,"column":46},"end":{"line":57,"column":80}},{"start":{"line":57,"column":85},"end":{"line":57,"column":94}}]},"5":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":7},"end":{"line":61,"column":7}},{"start":{"line":61,"column":7},"end":{"line":61,"column":7}}]},"6":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":11},"end":{"line":61,"column":16}},{"start":{"line":61,"column":20},"end":{"line":61,"column":25}}]},"7":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":22},"end":{"line":65,"column":42}},{"start":{"line":65,"column":46},"end":{"line":65,"column":80}},{"start":{"line":65,"column":85},"end":{"line":65,"column":94}}]},"8":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":14},"end":{"line":66,"column":31}},{"start":{"line":66,"column":35},"end":{"line":66,"column":52}}]},"9":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":30},"end":{"line":70,"column":34}},{"start":{"line":70,"column":38},"end":{"line":70,"column":47}}]},"10":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":14},"end":{"line":71,"column":31}},{"start":{"line":71,"column":35},"end":{"line":71,"column":52}}]},"11":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":4},"end":{"line":96,"column":4}},{"start":{"line":96,"column":4},"end":{"line":96,"column":4}}]},"12":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":24},"end":{"line":108,"column":46}},{"start":{"line":109,"column":16},"end":{"line":109,"column":47}}]},"13":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":10},"end":{"line":111,"column":10}},{"start":{"line":111,"column":10},"end":{"line":111,"column":10}}]},"14":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":12},"end":{"line":114,"column":12}},{"start":{"line":114,"column":12},"end":{"line":114,"column":12}}]},"15":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":2},"end":{"line":148,"column":2}},{"start":{"line":148,"column":2},"end":{"line":148,"column":2}}]},"16":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":6},"end":{"line":150,"column":6}},{"start":{"line":150,"column":6},"end":{"line":150,"column":6}}]},"17":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":22},"end":{"line":153,"column":28}},{"start":{"line":153,"column":32},"end":{"line":153,"column":49}}]},"18":{"line":177,"type":"binary-expr","locations":[{"start":{"line":177,"column":16},"end":{"line":177,"column":19}},{"start":{"line":177,"column":23},"end":{"line":177,"column":81}}]},"19":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":4},"end":{"line":179,"column":4}},{"start":{"line":179,"column":4},"end":{"line":179,"column":4}}]},"20":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":4},"end":{"line":197,"column":4}},{"start":{"line":197,"column":4},"end":{"line":197,"column":4}}]}},"code":["/**"," * sitemap.js"," *"," * An input generator for html-snapshots that uses a sitemap.xml file."," * Creates the snapshot arguments driven from sitemap.xml urls."," *"," * Copyright (c) 2013 - 2017 Alex Grant, LocalNerve, contributors"," * Licensed under the MIT license."," */","\"use strict\";","","var fs = require(\"fs\");","var path = require(\"path\");","var urlm = require(\"url\");","var zlib = require(\"zlib\");","var _ = require(\"lodash\");","var xml2js = require(\"xml2js\");","var request = require(\"request\");","var common = require(\"./index\");","var base = require(\"../input-generators/_base\");","","// the out of date fallback","var unixStart = \"1970-01-01T00:00:00.000Z\";","","// milliseconds for changefreq","var changeFreq = {","  always: -Number.MAX_VALUE,","  hourly: 3600000,","  daily: 86400000,","  weekly: 604800000,","  monthly: 2629740000,","  yearly: 31560000000,","  never: Number.MAX_VALUE","};","","/**"," * Return true if the urlNode is still current (not stale) by sitemap policy."," * If both lastmod and changefreq tags are supplied both are used."," * If only one of lastmod or changefreq are supplied,"," *   then they are compared against previous output if it exists."," * If a test fails for any reason, it is characterized as stale (returns false)."," *"," * @param {Object} urlNode - Sitemap XML url node as an object."," * @param {Object} options - Sitemap options object, passed through."," */","function stillCurrent (urlNode, options) {","  var lesser, greater, oPath;","  var now = Date.now();","  var lMod = _.first(urlNode.lastmod);","  var cFreq = _.first(urlNode.changefreq) ? _.first(urlNode.changefreq).toLowerCase() : null;","","  // only lastmod specified","  if (lMod && !cFreq) {","    // if sitemap is malformed, just blow up","    oPath = base.outputFile(options, urlNode.loc[0]);","","    lesser = now - ( (fs.existsSync(oPath) && fs.statSync(oPath).mtime.getTime()) || unixStart );","    greater = now - Date.parse(lMod);","  }","  // only changefreq specified","  else if (!lMod && cFreq) {","    // if sitemap is malformed, just blow up","    oPath = base.outputFile(options, urlNode.loc[0]);","","    lesser = now - ( (fs.existsSync(oPath) && fs.statSync(oPath).mtime.getTime()) || unixStart );","    greater = changeFreq[cFreq] || changeFreq.always;","  }","  // both or neither were specified","  else {","    lesser = now - Date.parse(lMod || unixStart);","    greater = changeFreq[cFreq] || changeFreq.always;","  }","","  return lesser <= greater;","}","","/**"," * Parse a sitemap document"," * For each qualifying url element in urlset, call base.input"," * Stops processing if an error occurs."," *"," * @param {Object} options - Sitemap options."," * @param {String} options.source - The sitemap url or file."," * @param {Boolean} options.sitemapPolicy - True if sitemapPolicy should be enforced."," * @param {String} document - An xml document string."," * @param {Function} callback - The completion callback."," */","function parse (options, document, callback) {","  xml2js.parseString(document, {","    trim: true,","    normalizeTags: true,","    normalize: true","  }, function (err, result) {","    var source = options.source;","","    if (!err) {","","      // Process the url input, but break if base.input returns false.","      //   In other words, _.find is looking for a non-falsy err.","      // For now, this can only happen if no outputDir is defined,","      //   which is a fatal bad option problem and will happen immediately.","      _.find(","        // if the sitemap is malformed, just blow up","        result.urlset.url,","        function (urlNode) {","          // optionally ignore current urls by sitemap policy","          var url,","              process = !options.sitemapPolicy ||","                !stillCurrent(urlNode, options);","","          if (process) {","            // if sitemap is malformed, just blow up","            url = urlm.parse(urlNode.loc[0]);","            if (!base.input(_.extend({}, options, {","                protocol: url.protocol,","                auth: url.auth,","                hostname: url.hostname,","                port: url.port","              }),","              urlNode.loc[0])","            ) {","              source = urlNode.loc[0];","              err = base.generatorError();","            }","          }","","          return err;","        }","      );","    }","","    callback(common.prependMsgToErr(err, source, true));","  });","}","","/**"," * Convert Buffer input, call next or callback with error"," *"," * @param {Object} options - Sitemap options."," * @param {String} options.source - Sitemap URL."," * @param {Buffer} buffer - A node buffer."," * @param {Function} next - A function to run after optional conversion applied."," * @param {Function} callback - A completion callback."," */","function convert(options, buffer, next, callback) {","  var gunzip = path.extname(options.source) === \".gz\";","","  if (gunzip) {","    zlib.gunzip(buffer, function (err, result) {","      if (err) {","        callback(common.prependMsgToErr(err, options.source, true));","      } else {","        next(options, result && result.toString(), callback);","      }","    });","  }","  else {","    next(options, buffer.toString(), callback);","  }","}","","/**"," * Retrieve the sitemap from a url and call to parse it."," *"," * @param {Object} options - Sitemap options."," * @param {String} options.source - Sitemap URL."," * @param {Function} options.timeout - User supplied run timeout."," * @param {Function} parseFn - A data parser function."," * @param {Function} callback - A completion callback function."," */","function getUrl (options, parseFn, callback) {","  request({","    url: options.source,","    encoding: null,","    timeout: options.timeout() // get the default timeout","  }, function (err, res, body) {","    var error = err || common.checkResponse(res, [\"text/xml\", \"application/xml\"]);","","    if (error) {","      callback(common.prependMsgToErr(error, options.source, true));","    } else {","      convert(options, body, parseFn, callback);","    }","  });","}","","/**"," * Retrieve the sitemap from a file and call to parse it."," *"," * @param {Object} options - Sitemap options."," * @param {String} options.source - Sitemap file path."," * @param {Function} parseFn - A data parser function."," * @param {Function} callback - A completion callback."," */","function getFile (options, parseFn, callback) {","  fs.readFile(options.source, function (err, data) {","    if (err) {","      callback(common.prependMsgToErr(err, options.source, true));","    } else {","      convert(options, data, parseFn, callback);","    }","  });","}","","module.exports = {","  getFile: getFile,","  getUrl: getUrl,","  stillCurrent: stillCurrent,","  parse: parse","};",""],"l":{"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"23":1,"26":1,"46":1,"47":0,"48":0,"49":0,"50":0,"53":0,"55":0,"57":0,"58":0,"61":0,"63":0,"65":0,"66":0,"70":0,"71":0,"74":0,"88":1,"89":0,"94":0,"96":0,"102":0,"107":0,"111":0,"113":0,"114":0,"122":0,"123":0,"127":0,"132":0,"145":1,"146":0,"148":0,"149":0,"150":0,"151":0,"153":0,"158":0,"171":1,"172":0,"177":0,"179":0,"180":0,"182":0,"195":1,"196":0,"197":0,"198":0,"200":0,"205":1}},"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/input-generators/_base.js":{"path":"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/input-generators/_base.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0],"16":[0,0],"17":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"fnMap":{"1":{"name":"normalize","line":46,"loc":{"start":{"line":46,"column":0},"end":{"line":46,"column":25}}},"2":{"name":"(anonymous_2)","line":51,"loc":{"start":{"line":51,"column":18},"end":{"line":51,"column":35}}},"3":{"name":"(anonymous_3)","line":51,"loc":{"start":{"line":51,"column":44},"end":{"line":51,"column":56}}},"4":{"name":"(anonymous_4)","line":53,"loc":{"start":{"line":53,"column":18},"end":{"line":53,"column":31}}},"5":{"name":"(anonymous_5)","line":53,"loc":{"start":{"line":53,"column":40},"end":{"line":53,"column":65}}},"6":{"name":"(anonymous_6)","line":62,"loc":{"start":{"line":62,"column":15},"end":{"line":62,"column":35}}},"7":{"name":"supplyMissingDefault","line":77,"loc":{"start":{"line":77,"column":0},"end":{"line":77,"column":46}}},"8":{"name":"(anonymous_8)","line":79,"loc":{"start":{"line":79,"column":42},"end":{"line":79,"column":62}}},"9":{"name":"prepOptions","line":92,"loc":{"start":{"line":92,"column":0},"end":{"line":92,"column":41}}},"10":{"name":"(anonymous_10)","line":102,"loc":{"start":{"line":102,"column":11},"end":{"line":102,"column":36}}},"11":{"name":"getOutputPath","line":124,"loc":{"start":{"line":124,"column":0},"end":{"line":124,"column":46}}},"12":{"name":"mapOutputFile","line":156,"loc":{"start":{"line":156,"column":0},"end":{"line":156,"column":46}}},"13":{"name":"(anonymous_13)","line":195,"loc":{"start":{"line":195,"column":12},"end":{"line":195,"column":32}}},"14":{"name":"(anonymous_14)","line":207,"loc":{"start":{"line":207,"column":7},"end":{"line":207,"column":47}}},"15":{"name":"(anonymous_15)","line":232,"loc":{"start":{"line":232,"column":9},"end":{"line":232,"column":34}}},"16":{"name":"(anonymous_16)","line":275,"loc":{"start":{"line":275,"column":7},"end":{"line":275,"column":28}}},"17":{"name":"(anonymous_17)","line":276,"loc":{"start":{"line":276,"column":20},"end":{"line":276,"column":32}}},"18":{"name":"(anonymous_18)","line":291,"loc":{"start":{"line":291,"column":18},"end":{"line":291,"column":30}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":50}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":27}},"3":{"start":{"line":13,"column":0},"end":{"line":13,"column":26}},"4":{"start":{"line":14,"column":0},"end":{"line":14,"column":26}},"5":{"start":{"line":15,"column":0},"end":{"line":15,"column":34}},"6":{"start":{"line":18,"column":0},"end":{"line":31,"column":3}},"7":{"start":{"line":46,"column":0},"end":{"line":66,"column":1}},"8":{"start":{"line":47,"column":2},"end":{"line":47,"column":19}},"9":{"start":{"line":48,"column":2},"end":{"line":64,"column":3}},"10":{"start":{"line":49,"column":4},"end":{"line":63,"column":5}},"11":{"start":{"line":50,"column":6},"end":{"line":60,"column":7}},"12":{"start":{"line":51,"column":8},"end":{"line":51,"column":83}},"13":{"start":{"line":51,"column":37},"end":{"line":51,"column":74}},"14":{"start":{"line":51,"column":58},"end":{"line":51,"column":71}},"15":{"start":{"line":53,"column":8},"end":{"line":59,"column":19}},"16":{"start":{"line":53,"column":33},"end":{"line":59,"column":10}},"17":{"start":{"line":54,"column":10},"end":{"line":58,"column":11}},"18":{"start":{"line":55,"column":12},"end":{"line":55,"column":63}},"19":{"start":{"line":57,"column":12},"end":{"line":57,"column":26}},"20":{"start":{"line":62,"column":6},"end":{"line":62,"column":56}},"21":{"start":{"line":62,"column":37},"end":{"line":62,"column":53}},"22":{"start":{"line":65,"column":2},"end":{"line":65,"column":16}},"23":{"start":{"line":77,"column":0},"end":{"line":84,"column":1}},"24":{"start":{"line":78,"column":2},"end":{"line":83,"column":3}},"25":{"start":{"line":79,"column":4},"end":{"line":82,"column":7}},"26":{"start":{"line":80,"column":6},"end":{"line":80,"column":26}},"27":{"start":{"line":81,"column":6},"end":{"line":81,"column":51}},"28":{"start":{"line":92,"column":0},"end":{"line":109,"column":1}},"29":{"start":{"line":94,"column":2},"end":{"line":94,"column":35}},"30":{"start":{"line":99,"column":2},"end":{"line":105,"column":5}},"31":{"start":{"line":103,"column":4},"end":{"line":103,"column":63}},"32":{"start":{"line":104,"column":4},"end":{"line":104,"column":49}},"33":{"start":{"line":107,"column":2},"end":{"line":107,"column":45}},"34":{"start":{"line":108,"column":2},"end":{"line":108,"column":46}},"35":{"start":{"line":124,"column":0},"end":{"line":145,"column":1}},"36":{"start":{"line":125,"column":2},"end":{"line":127,"column":50}},"37":{"start":{"line":130,"column":2},"end":{"line":132,"column":3}},"38":{"start":{"line":131,"column":4},"end":{"line":131,"column":17}},"39":{"start":{"line":135,"column":2},"end":{"line":137,"column":3}},"40":{"start":{"line":136,"column":4},"end":{"line":136,"column":70}},"41":{"start":{"line":140,"column":2},"end":{"line":142,"column":3}},"42":{"start":{"line":141,"column":4},"end":{"line":141,"column":25}},"43":{"start":{"line":144,"column":2},"end":{"line":144,"column":20}},"44":{"start":{"line":156,"column":0},"end":{"line":171,"column":1}},"45":{"start":{"line":157,"column":2},"end":{"line":159,"column":3}},"46":{"start":{"line":158,"column":4},"end":{"line":158,"column":55}},"47":{"start":{"line":161,"column":2},"end":{"line":161,"column":55}},"48":{"start":{"line":162,"column":2},"end":{"line":162,"column":36}},"49":{"start":{"line":163,"column":2},"end":{"line":163,"column":30}},"50":{"start":{"line":165,"column":2},"end":{"line":168,"column":3}},"51":{"start":{"line":166,"column":4},"end":{"line":166,"column":71}},"52":{"start":{"line":167,"column":4},"end":{"line":167,"column":18}},"53":{"start":{"line":170,"column":2},"end":{"line":170,"column":79}},"54":{"start":{"line":186,"column":0},"end":{"line":295,"column":2}},"55":{"start":{"line":196,"column":4},"end":{"line":196,"column":49}},"56":{"start":{"line":208,"column":4},"end":{"line":208,"column":28}},"57":{"start":{"line":209,"column":4},"end":{"line":209,"column":35}},"58":{"start":{"line":210,"column":4},"end":{"line":210,"column":30}},"59":{"start":{"line":233,"column":4},"end":{"line":233,"column":19}},"60":{"start":{"line":234,"column":4},"end":{"line":234,"column":57}},"61":{"start":{"line":236,"column":4},"end":{"line":265,"column":5}},"62":{"start":{"line":238,"column":6},"end":{"line":263,"column":9}},"63":{"start":{"line":267,"column":4},"end":{"line":267,"column":22}},"64":{"start":{"line":276,"column":4},"end":{"line":276,"column":49}},"65":{"start":{"line":276,"column":34},"end":{"line":276,"column":46}},"66":{"start":{"line":292,"column":4},"end":{"line":292,"column":49}}},"branchMap":{"1":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"2":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"3":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":6},"end":{"line":50,"column":6}},{"start":{"line":50,"column":6},"end":{"line":50,"column":6}}]},"4":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":10},"end":{"line":54,"column":10}},{"start":{"line":54,"column":10},"end":{"line":54,"column":10}}]},"5":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":19},"end":{"line":55,"column":30}},{"start":{"line":55,"column":35},"end":{"line":55,"column":61}}]},"6":{"line":55,"type":"cond-expr","locations":[{"start":{"line":55,"column":46},"end":{"line":55,"column":49}},{"start":{"line":55,"column":52},"end":{"line":55,"column":61}}]},"7":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":2},"end":{"line":78,"column":2}},{"start":{"line":78,"column":2},"end":{"line":78,"column":2}}]},"8":{"line":81,"type":"cond-expr","locations":[{"start":{"line":81,"column":30},"end":{"line":81,"column":44}},{"start":{"line":81,"column":47},"end":{"line":81,"column":50}}]},"9":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":2},"end":{"line":130,"column":2}},{"start":{"line":130,"column":2},"end":{"line":130,"column":2}}]},"10":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":2},"end":{"line":135,"column":2}},{"start":{"line":135,"column":2},"end":{"line":135,"column":2}}]},"11":{"line":136,"type":"cond-expr","locations":[{"start":{"line":136,"column":50},"end":{"line":136,"column":63}},{"start":{"line":136,"column":66},"end":{"line":136,"column":68}}]},"12":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":2},"end":{"line":140,"column":2}},{"start":{"line":140,"column":2},"end":{"line":140,"column":2}}]},"13":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":2},"end":{"line":157,"column":2}},{"start":{"line":157,"column":2},"end":{"line":157,"column":2}}]},"14":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":2},"end":{"line":165,"column":2}},{"start":{"line":165,"column":2},"end":{"line":165,"column":2}}]},"15":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":11},"end":{"line":170,"column":21}},{"start":{"line":170,"column":25},"end":{"line":170,"column":67}},{"start":{"line":170,"column":73},"end":{"line":170,"column":78}}]},"16":{"line":208,"type":"binary-expr","locations":[{"start":{"line":208,"column":14},"end":{"line":208,"column":21}},{"start":{"line":208,"column":25},"end":{"line":208,"column":27}}]},"17":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":4},"end":{"line":236,"column":4}},{"start":{"line":236,"column":4},"end":{"line":236,"column":4}}]}},"code":["/**"," * _base.js"," *"," * The common, base functionality of an input generator."," *"," * Copyright (c) 2013 - 2017 Alex Grant, LocalNerve, contributors"," * Licensed under the MIT license."," */","\"use strict\";","","var EventEmitter = require(\"events\").EventEmitter;","var path = require(\"path\");","var urlm = require(\"url\");","var _ = require(\"lodash\");","var common = require(\"../common\");","","// Defaults for this module","var defaults = Object.freeze({","  protocol: \"http\",","  hostname: \"localhost\",","  port: undefined,","  auth: undefined,","  outputPath: undefined,","  outputDir: \"./snapshots\",","  selector: \"body\",","  timeout: 10000,","  checkInterval: 250,","  useJQuery: false,","  verbose: false,","  phantomjsOptions: \"\"","});","","/**"," * Normalize the given object to a function."," *"," * If the input is a function, return it as is."," * If the input is undefined, then a passthru function is generated."," * If the input is NOT an Object, then a function returns that value."," * If the input is an Object, then a function receives a key and"," *   returns the property value if it exists, otherwise return the __default value."," *   If a passthru is requested, the key is returned when no __default is found."," *"," * @param {Any} obj - Some input to be represented by a function."," * @returns {Function} A function to represent the given input."," */","function normalize (obj) {","  var result = obj;","  if (typeof obj !== \"function\") {","    if (typeof obj !== \"undefined\") {","      if (Object.prototype.toString.call(obj) !== \"[object Object]\") {","        result = (function (value) { return function () { return value; }; }(obj));","      } else {","        result = (function (o) { return function (key, passthru) {","          if (o[key] === void 0) {","            return o.__default || (passthru ? key : undefined);","          } else {","            return o[key];","          }","        }; }(obj));","      }","    } else {","      result = function (passthru) { return passthru; };","    }","  }","  return result;","}","","/**"," * If a normalized option was overriden, but a default still undefined, supply one."," * The result could still be undefined, but only if the default is undefined."," *"," * If calling the normalized option with no args is undefined, supply missing default."," *"," * @param {Object} options - Input generator options."," * @param {String} name - The name of the property to supply missing default for."," */","function supplyMissingDefault (options, name) {","  if (options[name]() === void 0) {","    options[name] = _.wrap(options[name], function(func, key) {","      var res = func(key);","      return res === void 0 ? defaults[name] : res;","    });","  }","}","","/**"," * Prepare options for use by an input generator."," *"," * @param {Object} options - Input generator options with or without defaults."," * @param {Function} listener - The input generator listener."," */","function prepOptions (options, listener) {","  // Ensure defaults are represented","  common.ensure(options, defaults);","","  // Normalize certain arguments if they are not functions.","  // The certain arguments are per-page options.","  // However, outputPath is a special case","  [","    \"selector\", \"timeout\", \"useJQuery\", \"verbose\", \"phantomjsOptions\"","  ]","  .forEach(function (perPageOption) {","    options[perPageOption] = normalize(options[perPageOption]);","    supplyMissingDefault(options, perPageOption);","  });","","  options._inputEmitter = new EventEmitter();","  options._inputEmitter.on(\"input\", listener);","}","","/**"," * Get an output path for a page."," *"," * Parse a given page as a url and return its corresponding outputPath."," * If parse is an object, parse.url will be a reference to the url parse."," * Returns false if no output path found."," *"," * @param {Object} options - output path options."," * @param {Function} options.outputPath - Derives the outputPath from page."," * @param {String} page - The url to the page resource."," * @param {Object} [parse] - Supply to get page (url) parse output in prop `url`."," * @returns {String} The 'path' part of the file output path."," */","function getOutputPath (options, page, parse) {","  var pagePart = urlm.parse(page),","      // if outputPath was normalized with an object, let the key passthru","      outputPath = options.outputPath(page, true);","","  // check for bad output path","  if (!outputPath) {","    return false;","  }","","  // if the outputPath is really still a url, fix it to path+hash","  if (common.isUrl(outputPath)) {","    outputPath = pagePart.path + (pagePart.hash ? pagePart.hash : \"\");","  }","","  // if the caller wants the url parse output, return it","  if (parse) {","    parse.url = pagePart;","  }","","  return outputPath;","}","","/**"," * Using the options, map the given page to an output path."," *"," * @param {Object} options - The input generator options."," * @param {String} options.outputDir - The output directory root path."," * @param {String} [options.outputPath] - optional function or object to map pages to outputPaths."," * @param {String} [options.sitemapOutputDir] - optional root path for sitemaps within outputDir."," * @returns {String|Boolean} The full path to the output file or false on failure."," */","function mapOutputFile (options, page, parse) {","  if (!_.isFunction(options.outputPath)) {","    options.outputPath = normalize(options.outputPath);","  }","","  var outputPath = getOutputPath(options, page, parse);","  var outputDir = options.outputDir;","  var fileName = \"index.html\";","","  if (options.sitemapOutputDir) {","    outputDir = path.join(options.outputDir, options.sitemapOutputDir);","    fileName = \"\";","  }","","  return ( outputPath && path.join(outputDir, outputPath, fileName) ) || false;","}","","/*"," * Interface consumed by input generators"," *"," * Consumption pattern call order:"," * <Setup Phase>"," *   [defaults]"," * <Start Processing>"," *   run"," * <For each page, specialized>"," *   input"," * <End Processing>"," *   EOI"," */","module.exports = {","","  /**","   * Add specific items to the defaults.","   * Not required if the generator has no defaults itself.","   *","   * @param {Object} specific - Input generator specific defaults.","   * @return {Object} The fully mixed defaults.","   */","  defaults: function (specific) {","    return Object.assign({}, defaults, specific);","  },","","  /**","   * Run the input generator.","   *","   * @param {Object} options - Input generator options.","   * @param {Function} generator - The input generator to run.","   * @param {Function} listener - The callback that receives each input generated.","   * @returns {Promise} The promise returned by the input generator.","   */","  run: function (options, generator, listener) {","    options = options || {};","    prepOptions(options, listener);","    return generator(options);","  },","","  /**","   * Generate the input","   * Emit the event that contains the input hash","   *","   * @param {Object} options - input generator options.","   * @param {String} options.protocol - https?","   * @param {String} options.auth - user:pass for old style urls.","   * @param {String} options.hostname - The hostname part of the url.","   * @param {Number} options.port - The port part of the url.","   * @param {Function} options.selector - Produces a selector given a page url.","   * @param {Function} options.timeout - Produces a timeout given a page url.","   * @param {Number} options.checkInterval - The millisecond resolute poll interval.","   * @param {Function} options.userJQuery - Produces a jquery bool given a page url.","   * @param {Function} options.verbose - Produces a verbose bool given a page url.","   * @param {Function} options.phantomjsOptions - Produces phantomjs options given a page url.","   * @param {Function} options._inputEmitter - The EventEmitter to generate input.","   * @param {String} page - The url to the page resource.","   * @returns {String} The full output file path.","   */","  input: function (options, page) {","    var parse = {};","    var outputFile = mapOutputFile(options, page, parse);","","    if (outputFile) {","","      options._inputEmitter.emit(\"input\", {","        outputFile: outputFile,","        // make the url","        url: urlm.format({","                protocol: options.protocol,","                auth: options.auth,","                hostname: options.hostname,","                port: options.port,","                pathname: parse.url.pathname,","                search: parse.url.search,","                hash: parse.url.hash","              }),","        // map the input page to a selector","        selector: options.selector(page),","        // map the input page to a timeout","        timeout: options.timeout(page),","        checkInterval: options.checkInterval,","        // map the input page to a useJQuery flag","        useJQuery: options.useJQuery(page),","        // map the input page to a verbose flag","        verbose: options.verbose(page),","        // map the input page to phantomJS options","        phantomjsOptions: options.phantomjsOptions(page),","        // useful for testing, debugging","        __page: page","      });","","    }","","    return outputFile;","  },","","  /**","   * Signal the end of input","   *","   * @param {Object} generator - The input generator.","   */","  EOI: function (generator) {","    generator.EOI = function () { return true; };","  },","","  /**","   * Expose the output file mapping utility function.","   *","   * @see mapOutputFile.","   */","  outputFile: mapOutputFile,","","  /**","   * Unified input generator error.","   *","   * @returns {Error} The generic input generator failure error.","   */","  generatorError: function () {","    return new Error(\"Failed to generate input\");","  }","","};",""],"l":{"11":1,"12":1,"13":1,"14":1,"15":1,"18":1,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"53":0,"54":0,"55":0,"57":0,"62":0,"65":0,"77":1,"78":0,"79":0,"80":0,"81":0,"92":1,"94":0,"99":0,"103":0,"104":0,"107":0,"108":0,"124":1,"125":0,"130":0,"131":0,"135":0,"136":0,"140":0,"141":0,"144":0,"156":1,"157":0,"158":0,"161":0,"162":0,"163":0,"165":0,"166":0,"167":0,"170":0,"186":1,"196":0,"208":0,"209":0,"210":0,"233":0,"234":0,"236":0,"238":0,"267":0,"276":0,"292":0}},"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/input-generators/array.js":{"path":"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/input-generators/array.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"generateInput","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":33}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":27},"end":{"line":29,"column":54}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":33},"end":{"line":33,"column":54}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":11},"end":{"line":61,"column":28}}},"5":{"name":"(anonymous_5)","line":64,"loc":{"start":{"line":64,"column":10},"end":{"line":64,"column":22}}},"6":{"name":"(anonymous_6)","line":77,"loc":{"start":{"line":77,"column":7},"end":{"line":77,"column":36}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":26}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":34}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":30}},"4":{"start":{"line":17,"column":0},"end":{"line":17,"column":10}},"5":{"start":{"line":28,"column":0},"end":{"line":67,"column":1}},"6":{"start":{"line":29,"column":2},"end":{"line":58,"column":5}},"7":{"start":{"line":30,"column":4},"end":{"line":30,"column":12}},"8":{"start":{"line":32,"column":4},"end":{"line":57,"column":5}},"9":{"start":{"line":33,"column":6},"end":{"line":50,"column":9}},"10":{"start":{"line":34,"column":8},"end":{"line":34,"column":40}},"11":{"start":{"line":35,"column":8},"end":{"line":40,"column":11}},"12":{"start":{"line":42,"column":8},"end":{"line":47,"column":9}},"13":{"start":{"line":43,"column":10},"end":{"line":45,"column":12}},"14":{"start":{"line":46,"column":10},"end":{"line":46,"column":23}},"15":{"start":{"line":49,"column":8},"end":{"line":49,"column":20}},"16":{"start":{"line":52,"column":6},"end":{"line":54,"column":7}},"17":{"start":{"line":53,"column":8},"end":{"line":53,"column":18}},"18":{"start":{"line":56,"column":6},"end":{"line":56,"column":59}},"19":{"start":{"line":60,"column":2},"end":{"line":66,"column":7}},"20":{"start":{"line":62,"column":6},"end":{"line":62,"column":28}},"21":{"start":{"line":65,"column":6},"end":{"line":65,"column":22}},"22":{"start":{"line":69,"column":0},"end":{"line":80,"column":2}},"23":{"start":{"line":78,"column":4},"end":{"line":78,"column":54}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"2":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":42,"column":8}},{"start":{"line":42,"column":8},"end":{"line":42,"column":8}}]},"3":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":6},"end":{"line":52,"column":6}},{"start":{"line":52,"column":6},"end":{"line":52,"column":6}}]}},"code":["/*"," * array.js"," *"," * An input generator for html-snapshots that uses a javascript array"," *   to generate snapshot input from the host relative page urls."," *"," * Copyright (c) 2013 - 2017 Alex Grant, LocalNerve, contributors"," * Licensed under the MIT license."," */","/* global Promise */","\"use strict\";","","var urlm = require(\"url\");","var common = require(\"../common\");","var base = require(\"./_base\");","","var array;","","/**"," * Generate the snapshot arguments from an array of pages."," * Stops processing if one fails."," *"," * @param {Object} options - input generator options object."," * @param {String} options.source - Array of urls."," * @param {Function} options._abort - Called to abort the output watcher."," * @returns {Promise} Resolves to undefined on success."," */","function generateInput (options) {","  var result = new Promise(function (resolve, reject) {","    var all;","","    if (Array.isArray(options.source)) {","      all = options.source.every(function (sourceUrl) {","        var url = urlm.parse(sourceUrl);","        var opts = Object.assign({}, options, {","          protocol: url.protocol,","          auth: url.auth,","          hostname: url.hostname,","          port: url.port","        });","","        if (!base.input(opts, sourceUrl)) {","          reject(","            common.prependMsgToErr(base.generatorError(), sourceUrl, true)","          );","          return false;","        }","","        return true;","      });","","      if (all) {","        resolve();","      }","    } else {","      reject(new Error(\"options.source must be an array\"));","    }","  });","","  return result","    .catch(function (error) {","      options._abort(error);","    })","    .then(function () {","      base.EOI(array);","    });","}","","array = module.exports = {","  /**","   * Generate the input arguments for snapshots from an array.","   *","   * @param {Object} options - Array generator options.","   * @param {Function} listener - Callback to receive each input.","   * @returns {Promise} Resolves to undefined on completion.","   */","  run: function (options, listener) {","    return base.run(options, generateInput, listener);","  }","};",""],"l":{"13":1,"14":1,"15":1,"17":1,"28":1,"29":0,"30":0,"32":0,"33":0,"34":0,"35":0,"42":0,"43":0,"46":0,"49":0,"52":0,"53":0,"56":0,"60":0,"62":0,"65":0,"69":1,"78":0}},"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/input-generators/robots.js":{"path":"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/input-generators/robots.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"oneline","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":33}}},"2":{"name":"getRobotsUrl","line":52,"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":42}}},"3":{"name":"(anonymous_3)","line":56,"loc":{"start":{"line":56,"column":5},"end":{"line":56,"column":31}}},"4":{"name":"(anonymous_4)","line":62,"loc":{"start":{"line":62,"column":40},"end":{"line":62,"column":55}}},"5":{"name":"getRobotsFile","line":81,"loc":{"start":{"line":81,"column":0},"end":{"line":81,"column":43}}},"6":{"name":"(anonymous_6)","line":82,"loc":{"start":{"line":82,"column":30},"end":{"line":82,"column":51}}},"7":{"name":"(anonymous_7)","line":84,"loc":{"start":{"line":84,"column":40},"end":{"line":84,"column":56}}},"8":{"name":"generateInput","line":111,"loc":{"start":{"line":111,"column":0},"end":{"line":111,"column":33}}},"9":{"name":"(anonymous_9)","line":116,"loc":{"start":{"line":116,"column":11},"end":{"line":116,"column":26}}},"10":{"name":"(anonymous_10)","line":119,"loc":{"start":{"line":119,"column":10},"end":{"line":119,"column":22}}},"11":{"name":"(anonymous_11)","line":133,"loc":{"start":{"line":133,"column":7},"end":{"line":133,"column":36}}}},"statementMap":{"1":{"start":{"line":14,"column":0},"end":{"line":14,"column":23}},"2":{"start":{"line":15,"column":0},"end":{"line":15,"column":33}},"3":{"start":{"line":16,"column":0},"end":{"line":16,"column":34}},"4":{"start":{"line":17,"column":0},"end":{"line":17,"column":41}},"5":{"start":{"line":18,"column":0},"end":{"line":18,"column":30}},"6":{"start":{"line":21,"column":0},"end":{"line":24,"column":3}},"7":{"start":{"line":26,"column":0},"end":{"line":26,"column":11}},"8":{"start":{"line":32,"column":0},"end":{"line":42,"column":1}},"9":{"start":{"line":33,"column":2},"end":{"line":34,"column":32}},"10":{"start":{"line":36,"column":2},"end":{"line":39,"column":3}},"11":{"start":{"line":37,"column":4},"end":{"line":37,"column":73}},"12":{"start":{"line":38,"column":4},"end":{"line":38,"column":65}},"13":{"start":{"line":41,"column":2},"end":{"line":41,"column":14}},"14":{"start":{"line":52,"column":0},"end":{"line":76,"column":1}},"15":{"start":{"line":53,"column":2},"end":{"line":75,"column":5}},"16":{"start":{"line":57,"column":4},"end":{"line":57,"column":63}},"17":{"start":{"line":59,"column":4},"end":{"line":74,"column":5}},"18":{"start":{"line":60,"column":6},"end":{"line":60,"column":68}},"19":{"start":{"line":62,"column":6},"end":{"line":71,"column":9}},"20":{"start":{"line":66,"column":8},"end":{"line":69,"column":9}},"21":{"start":{"line":67,"column":10},"end":{"line":67,"column":76}},"22":{"start":{"line":68,"column":10},"end":{"line":68,"column":23}},"23":{"start":{"line":70,"column":8},"end":{"line":70,"column":20}},"24":{"start":{"line":73,"column":6},"end":{"line":73,"column":22}},"25":{"start":{"line":81,"column":0},"end":{"line":98,"column":1}},"26":{"start":{"line":82,"column":2},"end":{"line":97,"column":5}},"27":{"start":{"line":83,"column":4},"end":{"line":94,"column":5}},"28":{"start":{"line":84,"column":6},"end":{"line":93,"column":9}},"29":{"start":{"line":88,"column":8},"end":{"line":91,"column":9}},"30":{"start":{"line":89,"column":10},"end":{"line":89,"column":74}},"31":{"start":{"line":90,"column":10},"end":{"line":90,"column":23}},"32":{"start":{"line":92,"column":8},"end":{"line":92,"column":20}},"33":{"start":{"line":96,"column":4},"end":{"line":96,"column":18}},"34":{"start":{"line":111,"column":0},"end":{"line":122,"column":1}},"35":{"start":{"line":112,"column":2},"end":{"line":121,"column":7}},"36":{"start":{"line":117,"column":6},"end":{"line":117,"column":26}},"37":{"start":{"line":120,"column":6},"end":{"line":120,"column":23}},"38":{"start":{"line":124,"column":0},"end":{"line":138,"column":2}},"39":{"start":{"line":134,"column":4},"end":{"line":134,"column":67}},"40":{"start":{"line":136,"column":4},"end":{"line":136,"column":51}}},"branchMap":{"1":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"2":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":11},"end":{"line":38,"column":35}},{"start":{"line":38,"column":39},"end":{"line":38,"column":64}}]},"3":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":16},"end":{"line":57,"column":19}},{"start":{"line":57,"column":23},"end":{"line":57,"column":62}}]},"4":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"5":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":8},"end":{"line":66,"column":8}},{"start":{"line":66,"column":8},"end":{"line":66,"column":8}}]},"6":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":83,"column":4}},{"start":{"line":83,"column":4},"end":{"line":83,"column":4}}]},"7":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":8},"end":{"line":88,"column":8}},{"start":{"line":88,"column":8},"end":{"line":88,"column":8}}]},"8":{"line":113,"type":"cond-expr","locations":[{"start":{"line":113,"column":35},"end":{"line":113,"column":47}},{"start":{"line":113,"column":50},"end":{"line":113,"column":63}}]}},"code":["/*"," * robots.js"," *"," * An input generator for html-snapshots that uses a simple robots.txt file."," * Creates the snapshot arguments driven from robots.txt \"Allow: \"."," * Does not support wildcards."," * If you need wildcards, use the sitemap input generator."," *"," * Copyright (c) 2013 - 2017 Alex Grant, LocalNerve, contributors"," * Licensed under the MIT license."," */","\"use strict\";","","var fs = require(\"fs\");","var request = require(\"request\");","var common = require(\"../common\");","var nodeCall = require(\"../common/node\");","var base = require(\"./_base\");","","// The default options","var defaults = Object.freeze({","  source: \"./robots.txt\",","  hostname: \"localhost\"","});","","var robots;","","/**"," * Generate input for one line of a simple robots.txt file"," * Does not support wildcards."," */","function oneline (line, options) {","  var key = \"Allow: \",","      index = line.indexOf(key);","","  if (index !== -1) {","    var page = line.substr(index + key.length).replace(/^\\s+|\\s+$/g, \"\");","    return page.indexOf(\"*\") === -1 && base.input(options, page);","  }","","  return true;","}","","/**"," * Retrieves robots.txt from url and parses it."," *"," * @param {Object} options - Robots.txt options"," * @param {String} options.source - The URL to a robots.txt"," * @param {Function} options.timeout - Returns the robots.txt request timeout."," * @param {Function} callback - A completion callback."," */","function getRobotsUrl (options, callback) {","  request({","    url: options.source,","    timeout: options.timeout()","  }, function (err, res, body) {","    var error = err || common.checkResponse(res, \"text/plain\");","","    if (error) {","      callback(common.prependMsgToErr(error, options.source, true));","    } else {","      body.toString().split('\\n').every(function(line) {","        // Process the line input, but break if base.input returns false.","        // For now, this can only happen if no outputDir is defined,","        //   which is a fatal bad option problem and will happen immediately.","        if (!oneline(line, options)) {","          error = common.prependMsgToErr(base.generatorError(), line, true);","          return false;","        }","        return true;","      });","","      callback(error);","    }","  });","}","","/**"," * Reads the robots.txt file and parses it."," */","function getRobotsFile (options, callback) {","  fs.readFile(options.source, function (err, data) {","    if (!err) {","      data.toString().split('\\n').every(function (line) {","        // Process the line input, but break if base.input returns false.","        // For now, this can only happen if no outputDir is defined,","        //   which is a fatal bad option problem and will happen immediately.","        if (!oneline(line, options)) {","          err = common.prependMsgToErr(base.generatorError(), line, true);","          return false;","        }","        return true;","      });","    }","","    callback(err);","  });","}","","/**"," * Generate the snapshot arguments from a robots.txt file."," * Each line that has \"Allow:\" contains a url we need a snapshot for."," * This can return true on error for true async. An async error is supplied to listener"," * in this case via _abort."," *"," * @param {Object} options - input generator options object."," * @param {String} options.source - A url or file path."," * @param {Function} options._abort - Abort function to stop the async notifier."," * @returns {Promise} Resolves to undefined on completion."," */","function generateInput (options) {","  return nodeCall(","    common.isUrl(options.source) ? getRobotsUrl : getRobotsFile,","    options","  )","    .catch(function (err) {","      options._abort(err);","    })","    .then(function () {","      base.EOI(robots);","    });","}","","robots = module.exports = {","  /**","   * Generate the input arguments for snapshots from a robots.txt file","   * Each input argument generated calls the listener passing the input object.","   *","   * @param {Object} options - Robots options.","   * @param {Function} listener - Callback to receive each input.","   * @returns {Promise} Resolves to undefined on completion.","   */","  run: function (options, listener) {","    var opts = Object.assign({}, base.defaults(defaults), options);","","    return base.run(opts, generateInput, listener);","  }","};",""],"l":{"14":1,"15":1,"16":1,"17":1,"18":1,"21":1,"26":1,"32":1,"33":0,"36":0,"37":0,"38":0,"41":0,"52":1,"53":0,"57":0,"59":0,"60":0,"62":0,"66":0,"67":0,"68":0,"70":0,"73":0,"81":1,"82":0,"83":0,"84":0,"88":0,"89":0,"90":0,"92":0,"96":0,"111":1,"112":0,"117":0,"120":0,"124":1,"134":0,"136":0}},"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/input-generators/textfile.js":{"path":"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/input-generators/textfile.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"generateInput","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":33}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":11},"end":{"line":38,"column":26}}},"3":{"name":"(anonymous_3)","line":41,"loc":{"start":{"line":41,"column":10},"end":{"line":41,"column":26}}},"4":{"name":"(anonymous_4)","line":45,"loc":{"start":{"line":45,"column":42},"end":{"line":45,"column":58}}},"5":{"name":"(anonymous_5)","line":74,"loc":{"start":{"line":74,"column":7},"end":{"line":74,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":23}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":30}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":34}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":41}},"5":{"start":{"line":18,"column":0},"end":{"line":21,"column":3}},"6":{"start":{"line":23,"column":0},"end":{"line":23,"column":13}},"7":{"start":{"line":33,"column":0},"end":{"line":63,"column":1}},"8":{"start":{"line":34,"column":2},"end":{"line":62,"column":7}},"9":{"start":{"line":39,"column":6},"end":{"line":39,"column":26}},"10":{"start":{"line":42,"column":6},"end":{"line":42,"column":16}},"11":{"start":{"line":44,"column":6},"end":{"line":59,"column":7}},"12":{"start":{"line":45,"column":8},"end":{"line":53,"column":11}},"13":{"start":{"line":46,"column":10},"end":{"line":46,"column":52}},"14":{"start":{"line":48,"column":10},"end":{"line":51,"column":11}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":78}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":25}},"17":{"start":{"line":52,"column":10},"end":{"line":52,"column":22}},"18":{"start":{"line":55,"column":8},"end":{"line":58,"column":9}},"19":{"start":{"line":56,"column":10},"end":{"line":56,"column":31}},"20":{"start":{"line":57,"column":10},"end":{"line":57,"column":32}},"21":{"start":{"line":61,"column":6},"end":{"line":61,"column":25}},"22":{"start":{"line":65,"column":0},"end":{"line":79,"column":2}},"23":{"start":{"line":75,"column":4},"end":{"line":75,"column":67}},"24":{"start":{"line":77,"column":4},"end":{"line":77,"column":51}}},"branchMap":{"1":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":6},"end":{"line":44,"column":6}},{"start":{"line":44,"column":6},"end":{"line":44,"column":6}}]},"2":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":10},"end":{"line":48,"column":10}},{"start":{"line":48,"column":10},"end":{"line":48,"column":10}}]},"3":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":8}},{"start":{"line":55,"column":8},"end":{"line":55,"column":8}}]}},"code":["/*"," * textfile.js"," *"," * An input generator for html-snapshots that uses a simple text file"," *   with the host relative page urls, one per line."," *"," * Copyright (c) 2013 - 2017 Alex Grant, LocalNerve, contributors"," * Licensed under the MIT license."," */","\"use strict\";","","var fs = require(\"fs\");","var base = require(\"./_base\");","var common = require(\"../common\");","var nodeCall = require(\"../common/node\");","","// The default options","var defaults = Object.freeze({","  source: \"./line.txt\",","  hostname: \"localhost\"","});","","var textfile;","","/**"," * Generate the snapshot arguments from a line oriented text file."," * Each line contains a single url we need a snapshot for."," *"," * @param {Object} options - input generator options object."," * @param {String} options.source - path to the local input file."," * @returns {Promise} resolves when complete."," */","function generateInput (options) {","  return nodeCall(","    fs.readFile,","    options.source","  )","    .catch(function (err) {","      options._abort(err);","    })","    .then(function (data) {","      var error;","","      if (data) {","        data.toString().split('\\n').every(function (line) {","          var page = line.replace(/^\\s+|\\s+$/g, \"\");","","          if (!base.input(options, page)) {","            error = common.prependMsgToErr(base.generatorError(), page, true);","            return false;","          }","          return true;","        });","","        if (error) {","          console.error(error);","          options._abort(error);","        }","      }","","      base.EOI(textfile);","    });","}","","textfile = module.exports = {","  /**","   * Generate the input arguments for snapshots from a simple, line oriented","   * text file.","   *","   * @param {Object} options - Text file options.","   * @param {Function} listener - Callback to receive each input.","   * @returns {Promise} Resolves to undefined on completion.","   */","  run: function (options, listener) {","    var opts = Object.assign({}, base.defaults(defaults), options);","","    return base.run(opts, generateInput, listener);","  }","};",""],"l":{"12":1,"13":1,"14":1,"15":1,"18":1,"23":1,"33":1,"34":0,"39":0,"42":0,"44":0,"45":0,"46":0,"48":0,"49":0,"50":0,"52":0,"55":0,"56":0,"57":0,"61":0,"65":1,"75":0,"77":0}},"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/phantom/customFilter.js":{"path":"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/phantom/customFilter.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0},"b":{"1":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":57}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":35}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":47}},"4":{"start":{"line":17,"column":0},"end":{"line":17,"column":29}},"5":{"start":{"line":18,"column":0},"end":{"line":18,"column":43}},"6":{"start":{"line":20,"column":0},"end":{"line":24,"column":2}}},"branchMap":{"1":{"line":22,"type":"cond-expr","locations":[{"start":{"line":22,"column":22},"end":{"line":22,"column":46}},{"start":{"line":22,"column":49},"end":{"line":22,"column":72}}]}},"code":["/*"," * customFilter.js"," *"," * Produce a single snapshot for a web page."," * Snapshot taken when selector is(:visible)."," * Applies a custom filter to the snapshot output."," *"," * This is a phantomJS script that runs in phantomjs."," *"," * Copyright (c) 2013 - 2017 Alex Grant, LocalNerve, contributors"," * Licensed under the MIT license."," */","var selectorDetect = require(\"./modules/selectorDetect\");","var cli = require(\"./modules/cli\");","var detectors = require(\"./modules/detectors\");","","var options = cli.selector();","var customFilter = require(options.module);","","selectorDetect(","  options,","  options.useJQuery ? detectors.jquerySelector : detectors.querySelector,","  customFilter",");",""],"l":{"13":2,"14":0,"15":0,"17":0,"18":0,"20":0}},"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/phantom/modules/selectorDetect.js":{"path":"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/phantom/modules/selectorDetect.js","s":{"1":6,"2":6,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"waitFor","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":70}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":25},"end":{"line":31,"column":37}}},"3":{"name":"snapshot","line":55,"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":46}}},"4":{"name":"(anonymous_4)","line":56,"loc":{"start":{"line":56,"column":21},"end":{"line":56,"column":39}}},"5":{"name":"(anonymous_5)","line":73,"loc":{"start":{"line":73,"column":5},"end":{"line":73,"column":23}}},"6":{"name":"(anonymous_6)","line":82,"loc":{"start":{"line":82,"column":8},"end":{"line":82,"column":20}}},"7":{"name":"(anonymous_7)","line":90,"loc":{"start":{"line":90,"column":8},"end":{"line":90,"column":24}}},"8":{"name":"(anonymous_8)","line":96,"loc":{"start":{"line":96,"column":8},"end":{"line":96,"column":20}}}},"statementMap":{"1":{"start":{"line":14,"column":0},"end":{"line":14,"column":33}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":39}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":23}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":35}},"5":{"start":{"line":22,"column":0},"end":{"line":22,"column":35}},"6":{"start":{"line":29,"column":0},"end":{"line":46,"column":1}},"7":{"start":{"line":30,"column":2},"end":{"line":45,"column":20}},"8":{"start":{"line":32,"column":4},"end":{"line":44,"column":5}},"9":{"start":{"line":34,"column":6},"end":{"line":34,"column":27}},"10":{"start":{"line":36,"column":6},"end":{"line":36,"column":30}},"11":{"start":{"line":37,"column":6},"end":{"line":43,"column":7}},"12":{"start":{"line":39,"column":8},"end":{"line":39,"column":20}},"13":{"start":{"line":42,"column":8},"end":{"line":42,"column":48}},"14":{"start":{"line":55,"column":0},"end":{"line":106,"column":1}},"15":{"start":{"line":56,"column":2},"end":{"line":56,"column":59}},"16":{"start":{"line":56,"column":41},"end":{"line":56,"column":56}},"17":{"start":{"line":58,"column":2},"end":{"line":58,"column":58}},"18":{"start":{"line":61,"column":2},"end":{"line":63,"column":4}},"19":{"start":{"line":66,"column":2},"end":{"line":68,"column":3}},"20":{"start":{"line":67,"column":4},"end":{"line":67,"column":18}},"21":{"start":{"line":71,"column":2},"end":{"line":105,"column":5}},"22":{"start":{"line":74,"column":4},"end":{"line":104,"column":5}},"23":{"start":{"line":76,"column":6},"end":{"line":76,"column":60}},"24":{"start":{"line":79,"column":6},"end":{"line":103,"column":8}},"25":{"start":{"line":83,"column":10},"end":{"line":86,"column":13}},"26":{"start":{"line":91,"column":10},"end":{"line":91,"column":66}},"27":{"start":{"line":92,"column":10},"end":{"line":92,"column":116}},"28":{"start":{"line":97,"column":10},"end":{"line":97,"column":107}},"29":{"start":{"line":108,"column":0},"end":{"line":108,"column":26}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"2":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":10},"end":{"line":32,"column":48}},{"start":{"line":32,"column":53},"end":{"line":32,"column":63}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":6},"end":{"line":37,"column":6}},{"start":{"line":37,"column":6},"end":{"line":37,"column":6}}]},"4":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":11},"end":{"line":56,"column":17}},{"start":{"line":56,"column":21},"end":{"line":56,"column":58}}]},"5":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":2},"end":{"line":66,"column":2}},{"start":{"line":66,"column":2},"end":{"line":66,"column":2}}]},"6":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":74,"column":4}},{"start":{"line":74,"column":4},"end":{"line":74,"column":4}}]}},"code":["/*"," * selectorDetect.js"," *"," * Produce a single snapshot for a web page when a given selector is detected."," *"," * This is a module for a phantomJS script that runs in phantomjs."," *"," * Copyright (c) 2013 - 2017 Alex Grant, LocalNerve, contributors"," * Licensed under the MIT license."," */","","// Get the start time immediately since we're already in a PhantomJS process instance","// The spawner is already counting down (with allowances)...","var start = new Date().getTime();","","/**"," * Dependencies, phantomjs"," */","var page = require(\"webpage\").create();","var fs = require(\"fs\");","var globals = require(\"./globals\");","var verbose = require(\"./verbose\");","","/**"," * waitFor"," *"," * Heavily borrowed from phantomJS 'waitFor' example"," */","function waitFor (testFx, onReady, onTimeout, timeout, checkInterval) {","  var condition = false,","  interval = setInterval(function () {","    if ( (new Date().getTime() - start < timeout) && !condition ) {","      // If not timeout yet and condition not yet fulfilled","      condition = testFx();","    } else {","      clearInterval(interval); // Stop this interval","      if ( !condition ) {","        // If condition still not fulfilled (timeout but condition is 'false')","        onTimeout();","      } else {","        // Condition fulfilled (timeout and/or condition is 'true')","        onReady((new Date().getTime() - start));","      }","    }","  }, checkInterval);","}","","/**"," * snapshot"," *"," * Opens the page and waits for the selector to become visible. Then takes the html snapshot."," * Applies an optional output filter to the html content."," *"," */","function snapshot (options, detector, filter) {","  filter = filter || function(content) { return content; };","","  console.log(\"Creating snapshot for \"+options.url+\"...\");","","  // https://github.com/ariya/phantomjs/issues/10930","  page.customHeaders = {","    \"Accept-Encoding\": \"identity\"","  };","","  // add optional verbose output","  if (options.verbose) {","    verbose(page);","  }","","  // create the snapshot","  page.open(options.url, {","    resourceTimeout: options.timeout - 300 // a little space to report problems.","  }, function (status) {","    if (status !== \"success\") {","      // if phantomJS could not load the page, so end right now","      globals.exit(2, \"Unable to load page \" + options.url);","    } else {","      // phantomJS loaded the page, so wait for it to be ready","      waitFor(","","        // The test to determine readiness","        function () {","          return page.evaluate(detector, {","            selector: options.selector,","            url: options.url","          });","        },","","        // The onReady callback","        function (time) {","          fs.write(options.outputFile, filter(page.content), \"w\");","          globals.exit(0, \"snapshot for \"+options.url+\" finished in \"+time+\" ms\\n  written to \"+options.outputFile);","        },","","        // The onTimeout callback","        function () {","          globals.exit(1, \"timed out waiting for \"+options.selector+\" to become visible for \"+options.url);","        },","","        options.timeout,","        options.checkInterval","","      );","    }","  });","}","","module.exports = snapshot;",""],"l":{"14":6,"19":6,"20":0,"21":0,"22":0,"29":1,"30":0,"32":0,"34":0,"36":0,"37":0,"39":0,"42":0,"55":1,"56":0,"58":0,"61":0,"66":0,"67":0,"71":0,"74":0,"76":0,"79":0,"83":0,"91":0,"92":0,"97":0,"108":0}},"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/phantom/default.js":{"path":"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/phantom/default.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":57}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":35}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":47}},"4":{"start":{"line":16,"column":0},"end":{"line":16,"column":29}},"5":{"start":{"line":18,"column":0},"end":{"line":21,"column":2}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":22},"end":{"line":20,"column":46}},{"start":{"line":20,"column":49},"end":{"line":20,"column":72}}]}},"code":["/*"," * default.js"," *"," * Produce a single snapshot for a web page."," * Snapshot taken when a selector is detected visible."," *"," * This is a phantomJS script that runs in phantomjs."," *"," * Copyright (c) 2013 - 2017 Alex Grant, LocalNerve, contributors"," * Licensed under the MIT license."," */","var selectorDetect = require(\"./modules/selectorDetect\");","var cli = require(\"./modules/cli\");","var detectors = require(\"./modules/detectors\");","","var options = cli.selector();","","selectorDetect(","  options,","  options.useJQuery ? detectors.jquerySelector : detectors.querySelector",");",""],"l":{"12":2,"13":0,"14":0,"16":0,"18":0}},"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/phantom/removeScripts.js":{"path":"/home/travis/build/npmtest/node-npmtest-html-snapshots/node_modules/html-snapshots/lib/phantom/removeScripts.js","s":{"1":2,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"removeScriptTags","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":35}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":57}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":35}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":47}},"4":{"start":{"line":20,"column":0},"end":{"line":22,"column":1}},"5":{"start":{"line":21,"column":2},"end":{"line":21,"column":84}},"6":{"start":{"line":24,"column":0},"end":{"line":24,"column":29}},"7":{"start":{"line":26,"column":0},"end":{"line":30,"column":2}}},"branchMap":{"1":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":22},"end":{"line":28,"column":46}},{"start":{"line":28,"column":49},"end":{"line":28,"column":72}}]}},"code":["/*"," * removeScripts.js"," *"," * Produce a single snapshot for a web page."," * Snapshot taken when selector is(:visible)."," * Applies a single filter to remove any script tags."," *"," * This is a phantomJS script that runs in phantomjs."," *"," * Copyright (c) 2013 - 2017 Alex Grant, LocalNerve, contributors"," * Licensed under the MIT license."," */","var selectorDetect = require(\"./modules/selectorDetect\");","var cli = require(\"./modules/cli\");","var detectors = require(\"./modules/detectors\");","","/**"," * Remove all script tags from content"," */","function removeScriptTags(content) {","  return content.replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, \"\");","}","","var options = cli.selector();","","selectorDetect(","  options,","  options.useJQuery ? detectors.jquerySelector : detectors.querySelector,","  removeScriptTags",");",""],"l":{"13":2,"14":0,"15":0,"20":1,"21":0,"24":0,"26":0}}}